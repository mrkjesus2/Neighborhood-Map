{"version":3,"sources":["main.js","map.js","foursquare.js","wiki.js","viewModel.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","update","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","app","map","init","home","lat","lng","el","document","getElementById","this","google","maps","Map","center","zoom","minZoom","maxZoom","mapTypeControl","placesApi","places","PlacesService","infoWindow","InfoWindow","maxWidth","$","width","event","addListener","viewmodel","showDrawerBtn","setTimeout","css","addListenerOnce","getPlaces","createPlaces","forEach","place","idx","plc","Place","push","curPlace","storePlaces","localStorage","setItem","JSON","stringify","retrievePlaces","parse","geometry","log","ko","applyBindings","request","bounds","getBounds","types","nearbySearch","results","status","setPhotoUrls","msg","addError","photos","url","getUrl","maxHeight","getPlaceDetails","placeId","data","place_id","getDetails","details","deets","PlaceDetails","createMarker","plcloc","marker","Marker","animation","Animation","DROP","attribution","source","icon","title","name","clickHandler","foursquare","CLIENTID","CLIENTSECRET","baseUrl","version","findPlace","loc","jQuery","ajax","query","ll","client_id","client_secret","v","limit","dataType","done","venue","response","venues","getTips","fail","statusText","id","tips","fourSquare","wiki","getWiki","action","prop","exintro","exchars","inprop","format","redirects","converttitles","titles","headers","Api-User-Agent","firstId","Object","keys","pages","page","WikiPage","undefined","content","ambiguityChk","wikiInfo","categories","category","observableArray","curMarker","observable","inputText","frsqr","errorMsg","show","rating","open","opening_hours","photo","height","attributions","html_attributions","detailsIcon","frSqrInfo","extract","fullurl","info","mapping","fromJS","frSqrTips","address","formatted_address","phone","formatted_phone_number","website","reviews","Reviews","arr","review","author","author_name","authorUrl","author_url","text","time","clearErrors","setCurrentPlace","getAnimation","toggleBounce","toggleDetails","clickContactInfo","trigger","close","closeDrawer","toggleDrawer","setInfoWindow","removeClass","addClass","placeFilter","self","matches","filter","toLowerCase","input","indexOf","setMap","resetFilter","html","setContent","setAnimation","BOUNCE","els","getElementsByClassName","toggleClass","hasClass","openModal","closeModal","button","addEventListener"],"mappings":"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","file":"main.min.js","sourcesContent":["/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n\n/* I disabled the service worker */\n/* Uncomment everyting from here to get back to default */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // Check to see if there's an updated version of service-worker.js with\n      // new files to cache:\n      // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-registration-update-method\n      if (typeof registration.update === 'function') {\n        registration.update();\n      }\n\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n})();\n\n/* global */\nvar app = app || {};\n","/* global app document google $ window ko localStorage */\napp.map = app.map || {};\n\n(function() {\n  app.map = {\n    // Callback function for Google Maps - Initialize the Map\n    init: function() {\n      var home = {lat: 39.927677, lng: -75.171909};\n      var el = document.getElementById('map-container');\n\n      this.map = new google.maps.Map(el, {\n        center: home,\n        zoom: 14,\n        minZoom: 12,\n        maxZoom: 18,\n        mapTypeControl: false\n      });\n      this.placesApi = new google.maps.places.PlacesService(app.map.map);\n      this.infoWindow = new google.maps.InfoWindow({\n        maxWidth: $(window).width() * 0.7}\n      );\n      // Show the drawer button when infowindow closes\n      google.maps.event.addListener(\n        this.infoWindow, 'closeclick', app.viewmodel.showDrawerBtn\n      );\n\n      // Show error message - if maps can't be reached, will be visible\n      setTimeout(function() {\n        $('#maps-error').css('display', 'inline');\n      }, 5000);\n      // Load places once the maps bounds are set\n      google.maps.event.addListenerOnce(\n        this.map, 'bounds_changed', this.getPlaces\n      );\n    },\n\n    createPlaces: function(places) {\n      places.forEach(function(place, idx) {\n        var plc = new app.viewmodel.Place(place);\n\n        app.viewmodel.places.push(plc);\n        if (idx === 1) {\n          app.viewmodel.curPlace(plc);\n        }\n      });\n    },\n\n    // Likely against TOS, but figure it's fine for educational purposes\n    storePlaces: function(places) {\n      localStorage.setItem('places', JSON.stringify(places));\n    },\n\n    retrievePlaces: function() {\n      var places = JSON.parse(localStorage.places);\n      places.forEach(function(place) {\n        var lat = place.geometry.location.lat;\n        var lng = place.geometry.location.lng;\n        // Make lat/lng into functions to match API results\n        place.geometry.location.lat = function() {\n          return lat;\n        };\n        place.geometry.location.lng = function() {\n          return lng;\n        };\n      });\n      return places;\n    },\n\n    // Get a list of places from Google Maps\n    getPlaces: function() {\n      if (localStorage.places) {\n        console.log('Creating places from storage');\n        app.map.createPlaces(app.map.retrievePlaces());\n        ko.applyBindings(app.viewmodel);\n      } else {\n        // Variables for the request\n        var request = {\n          bounds: app.map.map.getBounds(),\n          types: ['art_gallery', 'museum', 'park']\n        };\n\n        // Call the Places API\n        app.map.placesApi.nearbySearch(request, function(results, status) {\n          console.log('Calling Places API');\n          if (status === 'OK') {\n            app.map.setPhotoUrls(results);\n            app.map.storePlaces(results);\n            app.map.createPlaces(results);\n          } else {\n            console.log('We have a places error');\n            var msg = 'Google Places Error: ' + status;\n            app.viewmodel.addError(msg);\n          }\n          ko.applyBindings(app.viewmodel);\n        });\n      }\n    },\n\n    setPhotoUrls: function(places) {\n      places.forEach(function(place) {\n        if (place.photos) {\n          var url = place.photos[0].getUrl({maxWidth: 200,\n                                            maxHeight: 300});\n          place.photos[0].url = url;\n        }\n      });\n    },\n\n    getPlaceDetails: function(place) {\n      var request = {\n        placeId: place.data.place_id\n      };\n      // Call the Places API, add details to the place\n      app.map.placesApi.getDetails(request, function(details, status) {\n        console.log('status', status);\n        if (status === 'OK') {\n          var deets = new app.viewmodel.PlaceDetails(details);\n          place.details(deets);\n        } else {\n          var msg = 'Google Places Error while getting details: ' + status;\n          app.viewmodel.addError(msg);\n        }\n      });\n    },\n\n    createMarker: function(place) {\n      // Location for the Marker\n      var plcloc = place.data.geometry.location;\n      // Create the marker\n      var marker = new google.maps.Marker({\n        animation: google.maps.Animation.DROP,\n        attribution: {source: 'mrkjesus2.github.io/Neighborhood-Map'},\n        icon: place.data.icon,\n        map: app.map.map,\n        place: {\n          location: {lat: plcloc.lat(), lng: plcloc.lng()},\n          placeId: place.data.place_id\n        },\n        title: place.data.name\n      });\n\n      google.maps.event.addListener(marker, 'click', function() {\n        app.viewmodel.clickHandler(place);\n      });\n      return marker;\n    }\n  };\n})();\n","/* global app jQuery */\napp.foursquare = app.foursquare || {};\n\n(function() {\n  // TODO: Move this to a config file (keep out of git)\n  var CLIENTID = 'ZBGAM3NOJCK4P345ELK2JIB232FMDENJ05GXYQRSAHOHURJR';\n  var CLIENTSECRET = 'RGEF2DNONIR0AN2GHSIIMGZWLT0IH5JSJCJ5AGFAJ2WZDGLH';\n\n  app.foursquare = {\n    baseUrl: 'https://api.foursquare.com/v2/venues/',\n    version: '20140806',\n\n    findPlace: function(place) {\n      var loc = place.data.geometry.location;\n      // Call the foursquare API\n      jQuery.ajax({\n        url: this.baseUrl + 'search',\n        data: {\n          query: place.name(),\n          ll: loc.lat() + ',' + loc.lng(),\n          // Disabled lines due to API requirements\n          client_id: CLIENTID, // eslint-disable-line camelcase\n          client_secret: CLIENTSECRET, // eslint-disable-line camelcase\n          v: this.version,\n          limit: '1'\n        },\n        dataType: 'json'\n\n      }).done(function(data) {\n        // Best matching venue\n        var venue = data.response.venues[0];\n\n        // Call the API again for venue tips\n        app.foursquare.getTips(venue, place);\n      }).fail(function(data) {\n        var msg = 'Foursquare Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    },\n\n    getTips: function(venue, place) {\n      jQuery.ajax({\n        url: this.baseUrl + venue.id + '/tips',\n        data: {\n          // Disabled lines due to API requirements\n          client_id: CLIENTID, // eslint-disable-line camelcase\n          client_secret: CLIENTSECRET, // eslint-disable-line camelcase\n          v: this.version\n        },\n        dataType: 'json'\n      }).done(function(data) {\n        var tips = data.response.tips;\n        // Assign details to place\n        app.viewmodel.fourSquare(venue, tips, place);\n      }).fail(function(data) {\n        var msg = 'Foursquare Tips Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    }\n  };\n})();\n","/* global app jQuery */\napp.wiki = app.wiki || {};\n\n(function() {\n  app.wiki = {\n    getWiki: function(place) {\n      jQuery.ajax({\n        url: 'https://en.wikipedia.org/w/api.php',\n        data: {\n          action: 'query',\n          prop: 'categories|extracts|info',\n          exintro: '',\n          exchars: 1000,\n          inprop: 'url',\n          format: 'json',\n          redirects: '',\n          converttitles: '',\n          titles: place.name()\n        },\n        dataType: 'jsonp',\n        headers: {'Api-User-Agent': 'Mark\\'s Udacity Project'}\n\n      }).done(function(data) {\n        var firstId = Object.keys(data.query.pages)['0'];\n        var page = new app.viewmodel.WikiPage(data.query.pages[firstId]);\n\n        // Check to make sure there is worthwhile content\n        if (page.content() !== undefined &&\n        !app.wiki.ambiguityChk(data, firstId)) {\n          place.wikiInfo(page);\n        }\n      }).fail(function(data) {\n        var msg = 'Wikipedia Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    },\n\n    // Check for a disambiguity page(ie. no info - only links)\n    ambiguityChk: function(data, id) {\n      var categories = data.query.pages[id].categories;\n\n      for (var category in categories) {\n        if (categories[category].title ===\n          'Category:All article disambiguation pages') {\n          return true;\n        }\n        return false;\n      }\n    }\n  };\n})();\n","/* global app ko $ google document */\n\napp.viewmodel = app.viewmodel || {};\n\napp.viewmodel = {\n  places: ko.observableArray(),\n  curMarker: null,\n  curPlace: ko.observable(),\n  inputText: ko.observable(''),\n  frsqr: null,\n  errorMsg: ko.observableArray([]),\n\n/* ************* */\n/* Constructors */\n/* ************ */\n  Place: function(place) {\n    this.show = ko.observable(true);\n\n    // Info returned from map.getPlaces\n    this.name = ko.observable(place.name);\n    this.rating = ko.observable(place.rating);\n    this.open = ko.observable(\n      place.opening_hours ? 'Open Now' : 'Closed' || 'Hours not available'\n    );\n    if (place.photos) {\n      this.photo = ko.observable({\n        url: ko.observable(place.photos[0].url),\n        height: ko.observable(place.photos[0].height),\n        width: ko.observable(place.photos[0].width),\n        attributions: ko.observable(place.photos[0].html_attributions)\n      } || {});\n    } else {\n      this.photo = ko.observable('none');\n    }\n    this.data = place;\n    this.detailsIcon = ko.observable('fa fa-chevron-circle-up');\n\n    // Info from elsewhere\n    this.details = ko.observable();\n    this.marker = app.map.createMarker(this);\n    this.wikiInfo = ko.observable();\n    this.frSqrInfo = ko.observable();\n  },\n\n  WikiPage: function(page) {\n    this.content = ko.observable(page.extract);\n    this.url = ko.observable(page.fullurl);\n  },\n\n  fourSquare: function(info, tips, place) {\n    // Map FourSquare responses to observables\n    var frSqrInfo = ko.mapping.fromJS(info, {});\n    var frSqrTips = ko.mapping.fromJS(tips, {});\n    // Create a child object for tips response\n    frSqrInfo.tips = frSqrTips;\n    // Assign the info to the place\n    place.frSqrInfo(frSqrInfo);\n  },\n\n  PlaceDetails: function(details) {\n    this.show = ko.observable(true);\n    this.address = ko.observable(details.formatted_address);\n    this.phone = ko.observable(details.formatted_phone_number);\n    this.photos = ko.observableArray(details.photos);\n    this.rating = ko.observable(details.rating);\n    this.website = ko.observable(details.website);\n    this.reviews = ko.observableArray(\n      new app.viewmodel.Reviews(details.reviews)\n    );\n  },\n\n  Reviews: function(reviews) {\n    var arr = [];\n    reviews.forEach(function(review) {\n      arr.push({\n        author: ko.observable(review.author_name),\n        authorUrl: ko.observable(review.author_url),\n        text: ko.observable(review.text),\n        time: ko.observable(review.time)\n      });\n    });\n    return arr;\n  },\n\n/* **************** */\n/* Helper Functions */\n/* **************** */\n  addError: function(msg) {\n    this.errorMsg = this.errorMsg || ko.observableArray([]);\n    this.errorMsg.push(msg);\n    setTimeout(function() {\n      app.viewmodel.clearErrors();\n    }, 2000);\n  },\n\n  clearErrors: function() {\n    this.errorMsg([]);\n  },\n\n  setCurrentPlace: function(place) {\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.toggleBounce();\n    }\n    app.viewmodel.curPlace(place);\n  },\n\n  toggleDetails: function(place) {\n    if (place.details() !== undefined && place.details().show() === true) {\n      place.details().show(false);\n      place.detailsIcon('fa fa-chevron-circle-up');\n    } else {\n      app.map.getPlaceDetails(place);\n      app.viewmodel.setCurrentPlace(place);\n      place.detailsIcon('fa fa-chevron-circle-down');\n    }\n  },\n\n  clickContactInfo: function() {\n    this.inputText(this.curPlace().name());\n    $('#drawer-top input').trigger('input');\n    this.toggleDetails(app.viewmodel.curPlace());\n    app.map.infoWindow.close();\n    this.closeDrawer();\n    this.toggleDrawer();\n  },\n\n  // Called when the marker or list item is clicked\n  clickHandler: function(place) {\n    var plc = place || this;\n\n    // Call for data\n    app.wiki.getWiki(plc);\n    app.foursquare.findPlace(plc);\n    // app.map.getPlaceDetails(plc);\n\n    // Handle map actions\n    app.map.infoWindow.close();\n    app.viewmodel.closeDrawer();\n    app.viewmodel.setCurrentPlace(plc);\n    app.viewmodel.toggleBounce();\n    // app.viewmodel.markerSetup(plc);\n\n    // Timeout to avoid two calls from success callbacks\n    setTimeout(function() {\n      app.viewmodel.setInfoWindow(plc);\n      // Hide the drawer button while infowindow is open\n      $('#drawer-btn').removeClass('closed');\n      $('#drawer-btn').addClass('open');\n    }, 300);\n  },\n\n  placeFilter: function() {\n    var self = this;\n    // A cushion to allow inputText to change\n    setTimeout(function() {\n      // Get the matching places\n      if (self.inputText()) {\n        var matches = self.places().filter(function(place) {\n          var name = place.name().toLowerCase();\n          var input = self.inputText().toLowerCase();\n          return name.indexOf(input) === 0;\n        });\n\n        // Set markers and list items to hidden\n        self.places().forEach(function(place) {\n          place.marker.setMap(null);\n          place.show(false);\n        });\n\n        // Add remaining places to the map and list\n        matches.forEach(function(place) {\n          place.marker.setMap(app.map.map);\n          place.show(true);\n        });\n      } else {\n        // Set all place markers on the map\n        self.places().forEach(function(place) {\n          place.marker.setMap(app.map.map);\n          place.show(true);\n        });\n      }\n    }, 100);\n\n    // Must return true to allow default behavior (Filling the input box)\n    return true;\n  },\n\n  resetFilter: function() {\n    app.viewmodel.inputText('');\n    $('#drawer-top input').trigger('input');\n  },\n\n  setInfoWindow: function(place) {\n    var content = $('#infowindow').html();\n\n    app.map.infoWindow.setContent(content);\n    app.map.infoWindow.open(app.map.map, place.marker);\n  },\n\n  // Strictly view related (create a separate file if there is more)\n  toggleBounce: function() {\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.curPlace().marker.setAnimation(null);\n    } else {\n      var marker = app.viewmodel.curPlace().marker;\n      marker.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  },\n\n  toggleDrawer: function() {\n    var els = document.getElementsByClassName('drawer');\n    $(els).toggleClass('closed open');\n  },\n\n  closeDrawer: function() {\n    // Reset drawer button if infowindow is open\n    var el = $('#drawer-btn');\n    if (el.hasClass('open')) {\n      el.removeClass('open');\n      el.addClass('closed');\n    }\n    // Close the drawer if it is open\n    if ($('#drawer-content').hasClass('open')) {\n      app.viewmodel.toggleDrawer();\n    }\n  },\n\n  showDrawerBtn: function() {\n    $('#drawer-btn').removeClass('open');\n    $('#drawer-btn').addClass('closed');\n  },\n\n  openModal: function() {\n    $('#modal').css('display', 'initial');\n    console.log('Open Modal');\n  },\n\n  closeModal: function() {\n    $('#modal').css('display', 'none');\n  },\n\n  init: function() {\n    var button = document.getElementById('drawer-btn');\n    button.addEventListener('click', app.viewmodel.toggleDrawer);\n  }\n};\n\napp.viewmodel.init();\n"],"sourceRoot":"/source/"}