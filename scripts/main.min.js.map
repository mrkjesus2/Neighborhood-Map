{"version":3,"sources":["viewModel.js"],"names":["app","viewmodel","mapError","ko","observable","places","observableArray","placeList","curMarker","curPlace","inputText","frsqr","errorMsg","infoWindow","drawerOpen","showModal","Place","place","this","show","name","rating","open","opening_hours","photos","photo","url","height","width","attributions","html_attributions","data","detailsIcon","details","marker","map","createMarker","wikiInfo","frSqrInfo","WikiPage","page","content","extract","fullurl","fourSquare","info","tips","mapping","fromJS","frSqrTips","PlaceDetails","address","formatted_address","phone","formatted_phone_number","website","reviews","Reviews","arr","forEach","review","push","author","author_name","authorUrl","author_url","text","time","addError","msg","setTimeout","clearErrors","setCurrentPlace","getAnimation","toggleBounce","toggleDetails","undefined","getPlaceDetails","clickContactInfo","placeFilter","close","toggleDrawer","clickHandler","plc","wiki","getWiki","foursquare","findPlace","findPlaceByName","i","length","self","matches","filter","toLowerCase","input","indexOf","setMap","resetFilter","setInfoWindow","$","html","setContent","setAnimation","google","maps","Animation","BOUNCE","setModal","autocomplete","document","getElementById","awesomplete","Awesomplete","list","addEventListener","value","console","log"],"mappings":"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","file":"main.min.js","sourcesContent":["/* global app ko $ google document Awesomplete */\n\napp.viewmodel = app.viewmodel || {};\n\napp.viewmodel = {\n  mapError: ko.observable(),\n  places: ko.observableArray(),\n  placeList: [],\n  curMarker: null,\n  curPlace: ko.observable(),\n  inputText: ko.observable(''),\n  frsqr: null,\n  errorMsg: ko.observableArray([]),\n  infoWindow: ko.observable(false),\n  drawerOpen: ko.observable(false),\n  showModal: ko.observable(false),\n\n/* ************* */\n/* Constructors */\n/* ************ */\n  Place: function(place) {\n    this.show = ko.observable(true);\n\n    // Info returned from map.getPlaces\n    this.name = ko.observable(place.name);\n    this.rating = ko.observable(place.rating);\n    this.open = ko.observable(\n      place.opening_hours ? 'Open Now' : 'Closed' || 'Hours not available'\n    );\n    if (place.photos) {\n      this.photo = ko.observable({\n        url: ko.observable(place.photos[0].url),\n        height: ko.observable(place.photos[0].height),\n        width: ko.observable(place.photos[0].width),\n        attributions: ko.observable(place.photos[0].html_attributions)\n      } || {});\n    } else {\n      this.photo = ko.observable('none');\n    }\n    this.data = place;\n    this.detailsIcon = ko.observable('fa fa-chevron-circle-up');\n\n    // Info from elsewhere\n    this.details = ko.observable();\n    this.marker = app.map.createMarker(this);\n    this.wikiInfo = ko.observable();\n    this.frSqrInfo = ko.observable();\n  },\n\n  WikiPage: function(page) {\n    this.content = ko.observable(page.extract);\n    this.url = ko.observable(page.fullurl);\n  },\n\n  fourSquare: function(info, tips, place) {\n    // Map FourSquare responses to observables\n    var frSqrInfo = ko.mapping.fromJS(info, {});\n    var frSqrTips = ko.mapping.fromJS(tips, {});\n    // Create a child object for tips response\n    frSqrInfo.tips = frSqrTips;\n    // Assign the info to the place\n    place.frSqrInfo(frSqrInfo);\n  },\n\n  PlaceDetails: function(details) {\n    this.show = ko.observable(true);\n    this.address = ko.observable(details.formatted_address);\n    this.phone = ko.observable(details.formatted_phone_number);\n    this.photos = ko.observableArray(details.photos);\n    this.rating = ko.observable(details.rating);\n    this.website = ko.observable(details.website);\n    this.reviews = ko.observableArray(\n      new app.viewmodel.Reviews(details.reviews)\n    );\n  },\n\n  Reviews: function(reviews) {\n    var arr = [];\n    reviews.forEach(function(review) {\n      arr.push({\n        author: ko.observable(review.author_name),\n        authorUrl: ko.observable(review.author_url),\n        text: ko.observable(review.text),\n        time: ko.observable(review.time)\n      });\n    });\n    return arr;\n  },\n\n/* **************** */\n/* Helper Functions */\n/* **************** */\n  addError: function(msg) {\n    this.errorMsg = this.errorMsg || ko.observableArray([]);\n    this.errorMsg.push(msg);\n    setTimeout(function() {\n      app.viewmodel.clearErrors();\n    }, 2000);\n  },\n\n  clearErrors: function() {\n    this.errorMsg([]);\n  },\n\n  setCurrentPlace: function(place) {\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.toggleBounce();\n    }\n    app.viewmodel.curPlace(place);\n  },\n\n  toggleDetails: function(place) {\n    if (place.details() !== undefined && place.details().show() === true) {\n      place.details().show(false);\n      place.detailsIcon('fa fa-chevron-circle-up');\n    } else {\n      app.map.getPlaceDetails(place);\n      app.viewmodel.setCurrentPlace(place);\n      place.detailsIcon('fa fa-chevron-circle-down');\n    }\n  },\n\n  clickContactInfo: function() {\n    this.inputText(this.curPlace().name());\n    app.viewmodel.placeFilter();\n    this.toggleDetails(app.viewmodel.curPlace());\n    app.map.infoWindow.close();\n    app.viewmodel.infoWindow(false);\n    this.toggleDrawer();\n  },\n\n  // Called when the marker or list item is clicked\n  clickHandler: function(place) {\n    var plc = place || this;\n\n    // Call for data\n    app.wiki.getWiki(plc);\n    app.foursquare.findPlace(plc);\n\n    // Handle map actions\n    app.map.infoWindow.close();\n    if (app.viewmodel.drawerOpen()) {\n      app.viewmodel.toggleDrawer();\n    }\n    app.viewmodel.setCurrentPlace(plc);\n    app.viewmodel.toggleBounce();\n  },\n\n  findPlaceByName: function(name) {\n    var places = app.viewmodel.places();\n    for (var i = places.length - 1; i >= 0; i--) {\n      if (places[i].name() === name) {\n        return places[i];\n      }\n    }\n    return false;\n  },\n\n  placeFilter: function() {\n    var self = this;\n\n    if (self.inputText()) {\n      var matches = self.places().filter(function(place) {\n        var name = place.name().toLowerCase();\n        var input = self.inputText().toLowerCase();\n        return name.indexOf(input) >= 0;\n      });\n\n      // Set markers and list items to hidden\n      self.places().forEach(function(place) {\n        place.marker.setMap(null);\n        place.show(false);\n      });\n\n      // Add remaining places to the map and list\n      matches.forEach(function(place) {\n        place.marker.setMap(app.map.map);\n        place.show(true);\n      });\n    } else {\n      // Set all place markers on the map\n      self.places().forEach(function(place) {\n        place.marker.setMap(app.map.map);\n        place.show(true);\n      });\n    }\n\n    return true;\n  },\n\n  resetFilter: function() {\n    app.viewmodel.inputText('');\n    app.viewmodel.placeFilter();\n    // Close details which are open\n    var places = this.places();\n    for (var i = places.length - 1; i >= 0; i--) {\n      if (places[i].details() && places[i].details().show()) {\n        places[i].details().show(false);\n        places[i].detailsIcon('fa fa-chevron-circle-up');\n      }\n    }\n  },\n\n  setInfoWindow: function(place) {\n    var content = $('#infowindow').html();\n\n    app.map.infoWindow.setContent(content);\n    app.map.infoWindow.open(app.map.map, place.marker);\n    // Hide the drawer button while infowindow is open\n    app.viewmodel.infoWindow(true);\n  },\n\n  toggleBounce: function() {\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.curPlace().marker.setAnimation(null);\n    } else {\n      var marker = app.viewmodel.curPlace().marker;\n      marker.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  },\n\n  toggleDrawer: function() {\n    app.viewmodel.drawerOpen(!app.viewmodel.drawerOpen());\n  },\n\n  setModal: function() {\n    app.viewmodel.showModal(!app.viewmodel.showModal());\n  },\n\n  autocomplete: function() {\n    var input = document.getElementById('place-input');\n    var awesomplete = new Awesomplete(input);\n    awesomplete.list = app.viewmodel.placeList;\n\n    input.addEventListener('awesomplete-selectcomplete', function() {\n      var place = app.viewmodel.findPlaceByName(this.value);\n      console.log(place);\n      app.viewmodel.setCurrentPlace(place);\n      app.viewmodel.toggleDetails(place);\n      app.viewmodel.inputText(this.value);\n      app.viewmodel.placeFilter();\n    });\n  }\n};\n\n"],"sourceRoot":"/source/"}