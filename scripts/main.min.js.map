{"version":3,"sources":["main.js","map.js","foursquare.js","wiki.js","viewModel.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","update","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","app","map","init","home","lat","lng","el","document","getElementById","this","google","maps","Map","center","zoom","minZoom","maxZoom","mapTypeControl","placesApi","places","PlacesService","infoWindow","InfoWindow","maxWidth","$","width","event","addListener","viewmodel","setTimeout","mapError","addListenerOnce","getPlaces","createPlaces","forEach","place","idx","plc","Place","push","placeList","name","curPlace","autocomplete","storePlaces","localStorage","setItem","JSON","stringify","retrievePlaces","parse","geometry","sameBoundsCheck","log","ko","applyBindings","getBounds","request","bounds","types","nearbySearch","results","status","setPhotoUrls","msg","addError","oldBounds","equals","photos","url","getUrl","maxHeight","getPlaceDetails","placeId","data","place_id","getDetails","details","deets","PlaceDetails","createMarker","plcloc","image","icon","scaledSize","Size","marker","Marker","animation","Animation","DROP","attribution","source","title","clickHandler","foursquare","CLIENTID","CLIENTSECRET","baseUrl","version","findPlace","loc","jQuery","ajax","query","ll","client_id","client_secret","v","limit","dataType","done","venue","response","venues","getTips","fail","statusText","id","tips","fourSquare","setInfoWindow","wiki","getWiki","action","prop","exintro","exchars","inprop","format","redirects","converttitles","titles","headers","Api-User-Agent","firstId","Object","keys","pages","page","WikiPage","undefined","content","ambiguityChk","wikiInfo","categories","category","observable","observableArray","curMarker","inputText","frsqr","errorMsg","drawerOpen","showModal","show","rating","open","opening_hours","photo","height","attributions","html_attributions","detailsIcon","frSqrInfo","extract","fullurl","info","mapping","fromJS","frSqrTips","address","formatted_address","phone","formatted_phone_number","website","reviews","Reviews","arr","review","author","author_name","authorUrl","author_url","text","time","clearErrors","setCurrentPlace","getAnimation","toggleBounce","toggleDetails","clickContactInfo","placeFilter","close","toggleDrawer","findPlaceByName","i","length","self","matches","filter","toLowerCase","input","indexOf","setMap","resetFilter","html","setContent","setAnimation","BOUNCE","setModal","awesomplete","Awesomplete","list","addEventListener","value"],"mappings":"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","file":"main.min.js","sourcesContent":["/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n\n/* I disabled the service worker */\n/* Uncomment everyting from here to get back to default */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // Check to see if there's an updated version of service-worker.js with\n      // new files to cache:\n      // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-registration-update-method\n      if (typeof registration.update === 'function') {\n        registration.update();\n      }\n\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n})();\n\n/* global */\nvar app = app || {};\n","/* global app document google $ window ko localStorage */\napp.map = app.map || {};\n\n(function() {\n  app.map = {\n    // Callback function for Google Maps - Initialize the Map\n    init: function() {\n      var home = {lat: 39.927677, lng: -75.171909};\n      var el = document.getElementById('map-container');\n\n      this.map = new google.maps.Map(el, {\n        center: home,\n        zoom: 14,\n        minZoom: 12,\n        maxZoom: 18,\n        mapTypeControl: false\n      });\n      this.placesApi = new google.maps.places.PlacesService(app.map.map);\n      this.infoWindow = new google.maps.InfoWindow({\n        maxWidth: $(window).width() * 0.7}\n      );\n\n      // Show the drawer button when infowindow closes\n      google.maps.event.addListener(this.infoWindow, 'closeclick', function() {\n        app.viewmodel.infoWindow(false);\n      });\n\n      // Show error message - if maps can't be reached, will be visible\n      setTimeout(function() {\n        app.viewmodel.mapError('There appears to be a problem with Google Maps, please try refreshing the page');\n      }, 5000);\n      // Load places once the maps bounds are set\n      google.maps.event.addListenerOnce(\n        this.map, 'bounds_changed', this.getPlaces\n      );\n    },\n\n    createPlaces: function(places) {\n      places.forEach(function(place, idx) {\n        var plc = new app.viewmodel.Place(place);\n\n        app.viewmodel.places.push(plc);\n        app.viewmodel.placeList.push(plc.name());\n        if (idx === 1) {\n          app.viewmodel.curPlace(plc);\n        }\n      });\n      app.viewmodel.autocomplete();\n    },\n\n    // Likely against TOS, but figure it's fine for educational purposes\n    storePlaces: function(places) {\n      localStorage.setItem('places', JSON.stringify(places));\n    },\n\n    retrievePlaces: function() {\n      var places = JSON.parse(localStorage.places);\n      places.forEach(function(place) {\n        var lat = place.geometry.location.lat;\n        var lng = place.geometry.location.lng;\n        // Make lat/lng into functions to match API results\n        place.geometry.location.lat = function() {\n          return lat;\n        };\n        place.geometry.location.lng = function() {\n          return lng;\n        };\n      });\n      return places;\n    },\n\n    // Get a list of places from Google Maps\n    getPlaces: function() {\n      if (localStorage.places && app.map.sameBoundsCheck()) {\n        console.log('Creating places from storage');\n        app.map.createPlaces(app.map.retrievePlaces());\n        ko.applyBindings(app.viewmodel);\n      } else {\n        localStorage.setItem('bounds', JSON.stringify(app.map.map.getBounds()));\n        // Variables for the request\n        var request = {\n          bounds: app.map.map.getBounds(),\n          types: ['art_gallery', 'museum', 'park']\n        };\n\n        // Call the Places API\n        app.map.placesApi.nearbySearch(request, function(results, status) {\n          console.log('Calling Places API');\n          if (status === 'OK') {\n            app.map.setPhotoUrls(results);\n            app.map.storePlaces(results);\n            app.map.createPlaces(results);\n          } else {\n            console.log('We have a places error');\n            var msg = 'Google Places Error: ' + status;\n            app.viewmodel.addError(msg);\n          }\n          ko.applyBindings(app.viewmodel);\n        });\n      }\n    },\n\n    sameBoundsCheck: function() {\n      var oldBounds = JSON.parse(localStorage.bounds);\n      return app.map.map.getBounds().equals(oldBounds);\n    },\n\n    setPhotoUrls: function(places) {\n      places.forEach(function(place) {\n        if (place.photos) {\n          var url = place.photos[0].getUrl({maxWidth: 200,\n                                            maxHeight: 300});\n          place.photos[0].url = url;\n        }\n      });\n    },\n\n    getPlaceDetails: function(place) {\n      var request = {\n        placeId: place.data.place_id\n      };\n      // Call the Places API, add details to the place\n      app.map.placesApi.getDetails(request, function(details, status) {\n        if (status === 'OK') {\n          var deets = new app.viewmodel.PlaceDetails(details);\n          place.details(deets);\n        } else {\n          var msg = 'Google Places Error while getting details: ' + status;\n          app.viewmodel.addError(msg);\n        }\n      });\n    },\n\n    createMarker: function(place) {\n      // Location for the Marker\n      var plcloc = place.data.geometry.location;\n      // Set icon and icon size\n      var image = {\n        url: place.data.icon,\n        scaledSize: new google.maps.Size(50, 50)\n      };\n      // Create the marker\n      var marker = new google.maps.Marker({\n        animation: google.maps.Animation.DROP,\n        attribution: {source: 'mrkjesus2.github.io/Neighborhood-Map'},\n        icon: image,\n        map: app.map.map,\n        place: {\n          location: {lat: plcloc.lat(), lng: plcloc.lng()},\n          placeId: place.data.place_id\n        },\n        title: place.data.name\n      });\n\n      google.maps.event.addListener(marker, 'click', function() {\n        app.viewmodel.clickHandler(place);\n      });\n      return marker;\n    }\n  };\n})();\n","/* global app jQuery */\napp.foursquare = app.foursquare || {};\n\n(function() {\n  // TODO: Move this to a config file (keep out of git)\n  var CLIENTID = 'ZBGAM3NOJCK4P345ELK2JIB232FMDENJ05GXYQRSAHOHURJR';\n  var CLIENTSECRET = 'RGEF2DNONIR0AN2GHSIIMGZWLT0IH5JSJCJ5AGFAJ2WZDGLH';\n\n  app.foursquare = {\n    baseUrl: 'https://api.foursquare.com/v2/venues/',\n    version: '20140806',\n\n    findPlace: function(place) {\n      var loc = place.data.geometry.location;\n      // Call the foursquare API\n      jQuery.ajax({\n        url: this.baseUrl + 'search',\n        data: {\n          query: place.name(),\n          ll: loc.lat() + ',' + loc.lng(),\n          // Disabled lines due to API requirements\n          client_id: CLIENTID, // eslint-disable-line camelcase\n          client_secret: CLIENTSECRET, // eslint-disable-line camelcase\n          v: this.version,\n          limit: '1'\n        },\n        dataType: 'json'\n\n      }).done(function(data) {\n        // Best matching venue\n        var venue = data.response.venues[0];\n\n        // Call the API again for venue tips\n        app.foursquare.getTips(venue, place);\n      }).fail(function(data) {\n        var msg = 'Foursquare Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    },\n\n    getTips: function(venue, place) {\n      jQuery.ajax({\n        url: this.baseUrl + venue.id + '/tips',\n        data: {\n          // Disabled lines due to API requirements\n          client_id: CLIENTID, // eslint-disable-line camelcase\n          client_secret: CLIENTSECRET, // eslint-disable-line camelcase\n          v: this.version\n        },\n        dataType: 'json'\n      }).done(function(data) {\n        var tips = data.response.tips;\n        // Assign details to place\n        app.viewmodel.fourSquare(venue, tips, place);\n        app.viewmodel.setInfoWindow(place);\n      }).fail(function(data) {\n        var msg = 'Foursquare Tips Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    }\n  };\n})();\n","/* global app jQuery */\napp.wiki = app.wiki || {};\n\n(function() {\n  app.wiki = {\n    getWiki: function(place) {\n      jQuery.ajax({\n        url: 'https://en.wikipedia.org/w/api.php',\n        data: {\n          action: 'query',\n          prop: 'categories|extracts|info',\n          exintro: '',\n          exchars: 1000,\n          inprop: 'url',\n          format: 'json',\n          redirects: '',\n          converttitles: '',\n          titles: place.name()\n        },\n        dataType: 'jsonp',\n        headers: {'Api-User-Agent': 'Mark\\'s Udacity Project'}\n\n      }).done(function(data) {\n        var firstId = Object.keys(data.query.pages)['0'];\n        var page = new app.viewmodel.WikiPage(data.query.pages[firstId]);\n\n        // Check to make sure there is worthwhile content\n        if (page.content() !== undefined &&\n        !app.wiki.ambiguityChk(data, firstId)) {\n          place.wikiInfo(page);\n          app.viewmodel.setInfoWindow(place);\n        }\n      }).fail(function(data) {\n        var msg = 'Wikipedia Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    },\n\n    // Check for a disambiguity page(ie. no info - only links)\n    ambiguityChk: function(data, id) {\n      var categories = data.query.pages[id].categories;\n\n      for (var category in categories) {\n        if (categories[category].title ===\n          'Category:All article disambiguation pages') {\n          return true;\n        }\n        return false;\n      }\n    }\n  };\n})();\n","/* global app ko $ google document Awesomplete */\n\napp.viewmodel = app.viewmodel || {};\n\napp.viewmodel = {\n  mapError: ko.observable(),\n  places: ko.observableArray(),\n  placeList: [],\n  curMarker: null,\n  curPlace: ko.observable(),\n  inputText: ko.observable(''),\n  frsqr: null,\n  errorMsg: ko.observableArray([]),\n  infoWindow: ko.observable(false),\n  drawerOpen: ko.observable(false),\n  showModal: ko.observable(false),\n\n/* ************* */\n/* Constructors */\n/* ************ */\n  Place: function(place) {\n    this.show = ko.observable(true);\n\n    // Info returned from map.getPlaces\n    this.name = ko.observable(place.name);\n    this.rating = ko.observable(place.rating);\n    this.open = ko.observable(\n      place.opening_hours ? 'Open Now' : 'Closed' || 'Hours not available'\n    );\n    if (place.photos) {\n      this.photo = ko.observable({\n        url: ko.observable(place.photos[0].url),\n        height: ko.observable(place.photos[0].height),\n        width: ko.observable(place.photos[0].width),\n        attributions: ko.observable(place.photos[0].html_attributions)\n      } || {});\n    } else {\n      this.photo = ko.observable('none');\n    }\n    this.data = place;\n    this.detailsIcon = ko.observable('fa fa-chevron-circle-up');\n\n    // Info from elsewhere\n    this.details = ko.observable();\n    this.marker = app.map.createMarker(this);\n    this.wikiInfo = ko.observable();\n    this.frSqrInfo = ko.observable();\n  },\n\n  WikiPage: function(page) {\n    this.content = ko.observable(page.extract);\n    this.url = ko.observable(page.fullurl);\n  },\n\n  fourSquare: function(info, tips, place) {\n    // Map FourSquare responses to observables\n    var frSqrInfo = ko.mapping.fromJS(info, {});\n    var frSqrTips = ko.mapping.fromJS(tips, {});\n    // Create a child object for tips response\n    frSqrInfo.tips = frSqrTips;\n    // Assign the info to the place\n    place.frSqrInfo(frSqrInfo);\n  },\n\n  PlaceDetails: function(details) {\n    this.show = ko.observable(true);\n    this.address = ko.observable(details.formatted_address);\n    this.phone = ko.observable(details.formatted_phone_number);\n    this.photos = ko.observableArray(details.photos);\n    this.rating = ko.observable(details.rating);\n    this.website = ko.observable(details.website);\n    this.reviews = ko.observableArray(\n      new app.viewmodel.Reviews(details.reviews)\n    );\n  },\n\n  Reviews: function(reviews) {\n    var arr = [];\n    reviews.forEach(function(review) {\n      arr.push({\n        author: ko.observable(review.author_name),\n        authorUrl: ko.observable(review.author_url),\n        text: ko.observable(review.text),\n        time: ko.observable(review.time)\n      });\n    });\n    return arr;\n  },\n\n/* **************** */\n/* Helper Functions */\n/* **************** */\n  addError: function(msg) {\n    this.errorMsg = this.errorMsg || ko.observableArray([]);\n    this.errorMsg.push(msg);\n    setTimeout(function() {\n      app.viewmodel.clearErrors();\n    }, 2000);\n  },\n\n  clearErrors: function() {\n    this.errorMsg([]);\n  },\n\n  setCurrentPlace: function(place) {\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.toggleBounce();\n    }\n    app.viewmodel.curPlace(place);\n  },\n\n  toggleDetails: function(place) {\n    if (place.details() !== undefined && place.details().show() === true) {\n      place.details().show(false);\n      place.detailsIcon('fa fa-chevron-circle-up');\n    } else {\n      app.map.getPlaceDetails(place);\n      app.viewmodel.setCurrentPlace(place);\n      place.detailsIcon('fa fa-chevron-circle-down');\n    }\n  },\n\n  clickContactInfo: function() {\n    this.inputText(this.curPlace().name());\n    app.viewmodel.placeFilter();\n    this.toggleDetails(app.viewmodel.curPlace());\n    app.map.infoWindow.close();\n    app.viewmodel.infoWindow(false);\n    this.toggleDrawer();\n  },\n\n  // Called when the marker or list item is clicked\n  clickHandler: function(place) {\n    var plc = place || this;\n\n    // Call for data\n    app.wiki.getWiki(plc);\n    app.foursquare.findPlace(plc);\n\n    // Handle map actions\n    app.map.infoWindow.close();\n    if (app.viewmodel.drawerOpen()) {\n      app.viewmodel.toggleDrawer();\n    }\n    app.viewmodel.setCurrentPlace(plc);\n    app.viewmodel.toggleBounce();\n  },\n\n  findPlaceByName: function(name) {\n    var places = app.viewmodel.places();\n    for (var i = places.length - 1; i >= 0; i--) {\n      if (places[i].name() === name) {\n        return places[i];\n      }\n    }\n    return false;\n  },\n\n  placeFilter: function() {\n    var self = this;\n\n    if (self.inputText()) {\n      var matches = self.places().filter(function(place) {\n        var name = place.name().toLowerCase();\n        var input = self.inputText().toLowerCase();\n        return name.indexOf(input) >= 0;\n      });\n\n      // Set markers and list items to hidden\n      self.places().forEach(function(place) {\n        place.marker.setMap(null);\n        place.show(false);\n      });\n\n      // Add remaining places to the map and list\n      matches.forEach(function(place) {\n        place.marker.setMap(app.map.map);\n        place.show(true);\n      });\n    } else {\n      // Set all place markers on the map\n      self.places().forEach(function(place) {\n        place.marker.setMap(app.map.map);\n        place.show(true);\n      });\n    }\n\n    return true;\n  },\n\n  resetFilter: function() {\n    app.viewmodel.inputText('');\n    app.viewmodel.placeFilter();\n    // Close details which are open\n    var places = this.places();\n    for (var i = places.length - 1; i >= 0; i--) {\n      if (places[i].details() && places[i].details().show()) {\n        places[i].details().show(false);\n        places[i].detailsIcon('fa fa-chevron-circle-up');\n      }\n    }\n  },\n\n  setInfoWindow: function(place) {\n    var content = $('#infowindow').html();\n\n    app.map.infoWindow.setContent(content);\n    app.map.infoWindow.open(app.map.map, place.marker);\n    // Hide the drawer button while infowindow is open\n    app.viewmodel.infoWindow(true);\n  },\n\n  toggleBounce: function() {\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.curPlace().marker.setAnimation(null);\n    } else {\n      var marker = app.viewmodel.curPlace().marker;\n      marker.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  },\n\n  toggleDrawer: function() {\n    app.viewmodel.drawerOpen(!app.viewmodel.drawerOpen());\n  },\n\n  setModal: function() {\n    app.viewmodel.showModal(!app.viewmodel.showModal());\n  },\n\n  autocomplete: function() {\n    var input = document.getElementById('place-input');\n    var awesomplete = new Awesomplete(input);\n    awesomplete.list = app.viewmodel.placeList;\n\n    input.addEventListener('awesomplete-selectcomplete', function() {\n      var place = app.viewmodel.findPlaceByName(this.value);\n      console.log(place);\n      app.viewmodel.setCurrentPlace(place);\n      app.viewmodel.toggleDetails(place);\n      app.viewmodel.inputText(this.value);\n      app.viewmodel.placeFilter();\n    });\n  }\n};\n\n"],"sourceRoot":"/source/"}