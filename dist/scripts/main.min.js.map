{"version":3,"sources":["foursquare.js","wiki.js","viewModel.js"],"names":["app","foursquare","CLIENTID","CLIENTSECRET","baseUrl","version","findPlace","place","loc","data","geometry","location","jQuery","ajax","url","this","query","name","ll","lat","lng","client_id","client_secret","v","limit","dataType","done","venue","response","venues","getTips","fail","msg","statusText","viewmodel","addError","id","tips","fourSquare","wiki","getWiki","action","prop","exintro","exchars","inprop","format","redirects","converttitles","titles","headers","Api-User-Agent","firstId","Object","keys","pages","page","WikiPage","undefined","content","ambiguityChk","wikiInfo","categories","category","title","places","ko","observableArray","curMarker","curPlace","observable","inputText","frsqr","errorMsg","Place","show","rating","open","opening_hours","photos","photo","height","width","attributions","html_attributions","detailsIcon","details","marker","map","createMarker","frSqrInfo","extract","fullurl","info","mapping","fromJS","frSqrTips","PlaceDetails","address","formatted_address","phone","formatted_phone_number","website","reviews","Reviews","arr","forEach","review","push","author","author_name","authorUrl","author_url","text","time","setTimeout","clearErrors","setCurrentPlace","getAnimation","toggleBounce","toggleDetails","getPlaceDetails","clickContactInfo","$","trigger","infoWindow","close","closeDrawer","toggleDrawer","clickHandler","plc","setInfoWindow","removeClass","addClass","placeFilter","self","matches","filter","toLowerCase","input","indexOf","setMap","resetFilter","html","setContent","setAnimation","google","maps","Animation","BOUNCE","els","document","getElementsByClassName","toggleClass","el","hasClass","showDrawerBtn","openModal","css","console","log","closeModal","init","button","getElementById","addEventListener"],"mappings":"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","file":"main.min.js","sourcesContent":["/* global app jQuery */\napp.foursquare = app.foursquare || {};\n\n(function() {\n  // TODO: Move this to a config file (keep out of git)\n  var CLIENTID = 'ZBGAM3NOJCK4P345ELK2JIB232FMDENJ05GXYQRSAHOHURJR';\n  var CLIENTSECRET = 'RGEF2DNONIR0AN2GHSIIMGZWLT0IH5JSJCJ5AGFAJ2WZDGLH';\n\n  app.foursquare = {\n    baseUrl: 'https://api.foursquare.com/v2/venues/',\n    version: '20140806',\n\n    findPlace: function(place) {\n      var loc = place.data.geometry.location;\n      // Call the foursquare API\n      jQuery.ajax({\n        url: this.baseUrl + 'search',\n        data: {\n          query: place.name(),\n          ll: loc.lat() + ',' + loc.lng(),\n          // Disabled lines due to API requirements\n          client_id: CLIENTID, // eslint-disable-line camelcase\n          client_secret: CLIENTSECRET, // eslint-disable-line camelcase\n          v: this.version,\n          limit: '1'\n        },\n        dataType: 'json'\n\n      }).done(function(data) {\n        // Best matching venue\n        var venue = data.response.venues[0];\n\n        // Call the API again for venue tips\n        app.foursquare.getTips(venue, place);\n      }).fail(function(data) {\n        var msg = 'Foursquare Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    },\n\n    getTips: function(venue, place) {\n      jQuery.ajax({\n        url: this.baseUrl + venue.id + '/tips',\n        data: {\n          // Disabled lines due to API requirements\n          client_id: CLIENTID, // eslint-disable-line camelcase\n          client_secret: CLIENTSECRET, // eslint-disable-line camelcase\n          v: this.version\n        },\n        dataType: 'json'\n      }).done(function(data) {\n        var tips = data.response.tips;\n        // Assign details to place\n        app.viewmodel.fourSquare(venue, tips, place);\n      }).fail(function(data) {\n        var msg = 'Foursquare Tips Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    }\n  };\n})();\n","/* global app jQuery */\napp.wiki = app.wiki || {};\n\n(function() {\n  app.wiki = {\n    getWiki: function(place) {\n      jQuery.ajax({\n        url: 'https://en.wikipedia.org/w/api.php',\n        data: {\n          action: 'query',\n          prop: 'categories|extracts|info',\n          exintro: '',\n          exchars: 1000,\n          inprop: 'url',\n          format: 'json',\n          redirects: '',\n          converttitles: '',\n          titles: place.name()\n        },\n        dataType: 'jsonp',\n        headers: {'Api-User-Agent': 'Mark\\'s Udacity Project'}\n\n      }).done(function(data) {\n        var firstId = Object.keys(data.query.pages)['0'];\n        var page = new app.viewmodel.WikiPage(data.query.pages[firstId]);\n\n        // Check to make sure there is worthwhile content\n        if (page.content() !== undefined &&\n        !app.wiki.ambiguityChk(data, firstId)) {\n          place.wikiInfo(page);\n        }\n      }).fail(function(data) {\n        var msg = 'Wikipedia Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    },\n\n    // Check for a disambiguity page(ie. no info - only links)\n    ambiguityChk: function(data, id) {\n      var categories = data.query.pages[id].categories;\n\n      for (var category in categories) {\n        if (categories[category].title ===\n          'Category:All article disambiguation pages') {\n          return true;\n        }\n        return false;\n      }\n    }\n  };\n})();\n","/* global app ko $ google document */\n\napp.viewmodel = app.viewmodel || {};\n\napp.viewmodel = {\n  places: ko.observableArray(),\n  curMarker: null,\n  curPlace: ko.observable(),\n  inputText: ko.observable(''),\n  frsqr: null,\n  errorMsg: ko.observableArray([]),\n\n/* ************* */\n/* Constructors */\n/* ************ */\n  Place: function(place) {\n    this.show = ko.observable(true);\n\n    // Info returned from map.getPlaces\n    this.name = ko.observable(place.name);\n    this.rating = ko.observable(place.rating);\n    this.open = ko.observable(\n      place.opening_hours ? 'Open Now' : 'Closed' || 'Hours not available'\n    );\n    if (place.photos) {\n      this.photo = ko.observable({\n        url: ko.observable(place.photos[0].url),\n        height: ko.observable(place.photos[0].height),\n        width: ko.observable(place.photos[0].width),\n        attributions: ko.observable(place.photos[0].html_attributions)\n      } || {});\n    } else {\n      this.photo = ko.observable('none');\n    }\n    this.data = place;\n    this.detailsIcon = ko.observable('fa fa-chevron-circle-up');\n\n    // Info from elsewhere\n    this.details = ko.observable();\n    this.marker = app.map.createMarker(this);\n    this.wikiInfo = ko.observable();\n    this.frSqrInfo = ko.observable();\n  },\n\n  WikiPage: function(page) {\n    this.content = ko.observable(page.extract);\n    this.url = ko.observable(page.fullurl);\n  },\n\n  fourSquare: function(info, tips, place) {\n    // Map FourSquare responses to observables\n    var frSqrInfo = ko.mapping.fromJS(info, {});\n    var frSqrTips = ko.mapping.fromJS(tips, {});\n    // Create a child object for tips response\n    frSqrInfo.tips = frSqrTips;\n    // Assign the info to the place\n    place.frSqrInfo(frSqrInfo);\n  },\n\n  PlaceDetails: function(details) {\n    this.show = ko.observable(true);\n    this.address = ko.observable(details.formatted_address);\n    this.phone = ko.observable(details.formatted_phone_number);\n    this.photos = ko.observableArray(details.photos);\n    this.rating = ko.observable(details.rating);\n    this.website = ko.observable(details.website);\n    this.reviews = ko.observableArray(\n      new app.viewmodel.Reviews(details.reviews)\n    );\n  },\n\n  Reviews: function(reviews) {\n    var arr = [];\n    reviews.forEach(function(review) {\n      arr.push({\n        author: ko.observable(review.author_name),\n        authorUrl: ko.observable(review.author_url),\n        text: ko.observable(review.text),\n        time: ko.observable(review.time)\n      });\n    });\n    return arr;\n  },\n\n/* **************** */\n/* Helper Functions */\n/* **************** */\n  addError: function(msg) {\n    this.errorMsg = this.errorMsg || ko.observableArray([]);\n    this.errorMsg.push(msg);\n    setTimeout(function() {\n      app.viewmodel.clearErrors();\n    }, 2000);\n  },\n\n  clearErrors: function() {\n    this.errorMsg([]);\n  },\n\n  setCurrentPlace: function(place) {\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.toggleBounce();\n    }\n    app.viewmodel.curPlace(place);\n  },\n\n  toggleDetails: function(place) {\n    if (place.details() !== undefined && place.details().show() === true) {\n      place.details().show(false);\n      place.detailsIcon('fa fa-chevron-circle-up');\n    } else {\n      app.map.getPlaceDetails(place);\n      app.viewmodel.setCurrentPlace(place);\n      place.detailsIcon('fa fa-chevron-circle-down');\n    }\n  },\n\n  clickContactInfo: function() {\n    this.inputText(this.curPlace().name());\n    $('#drawer-top input').trigger('input');\n    this.toggleDetails(app.viewmodel.curPlace());\n    app.map.infoWindow.close();\n    this.closeDrawer();\n    this.toggleDrawer();\n  },\n\n  // Called when the marker or list item is clicked\n  clickHandler: function(place) {\n    var plc = place || this;\n\n    // Call for data\n    app.wiki.getWiki(plc);\n    app.foursquare.findPlace(plc);\n    // app.map.getPlaceDetails(plc);\n\n    // Handle map actions\n    app.map.infoWindow.close();\n    app.viewmodel.closeDrawer();\n    app.viewmodel.setCurrentPlace(plc);\n    app.viewmodel.toggleBounce();\n    // app.viewmodel.markerSetup(plc);\n\n    // Timeout to avoid two calls from success callbacks\n    setTimeout(function() {\n      app.viewmodel.setInfoWindow(plc);\n      // Hide the drawer button while infowindow is open\n      $('#drawer-btn').removeClass('closed');\n      $('#drawer-btn').addClass('open');\n    }, 300);\n  },\n\n  placeFilter: function() {\n    var self = this;\n    // A cushion to allow inputText to change\n    setTimeout(function() {\n      // Get the matching places\n      if (self.inputText()) {\n        var matches = self.places().filter(function(place) {\n          var name = place.name().toLowerCase();\n          var input = self.inputText().toLowerCase();\n          return name.indexOf(input) === 0;\n        });\n\n        // Set markers and list items to hidden\n        self.places().forEach(function(place) {\n          place.marker.setMap(null);\n          place.show(false);\n        });\n\n        // Add remaining places to the map and list\n        matches.forEach(function(place) {\n          place.marker.setMap(app.map.map);\n          place.show(true);\n        });\n      } else {\n        // Set all place markers on the map\n        self.places().forEach(function(place) {\n          place.marker.setMap(app.map.map);\n          place.show(true);\n        });\n      }\n    }, 100);\n\n    // Must return true to allow default behavior (Filling the input box)\n    return true;\n  },\n\n  resetFilter: function() {\n    app.viewmodel.inputText('');\n    $('#drawer-top input').trigger('input');\n  },\n\n  setInfoWindow: function(place) {\n    var content = $('#infowindow').html();\n\n    app.map.infoWindow.setContent(content);\n    app.map.infoWindow.open(app.map.map, place.marker);\n  },\n\n  // Strictly view related (create a separate file if there is more)\n  toggleBounce: function() {\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.curPlace().marker.setAnimation(null);\n    } else {\n      var marker = app.viewmodel.curPlace().marker;\n      marker.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  },\n\n  toggleDrawer: function() {\n    var els = document.getElementsByClassName('drawer');\n    $(els).toggleClass('closed open');\n  },\n\n  closeDrawer: function() {\n    // Reset drawer button if infowindow is open\n    var el = $('#drawer-btn');\n    if (el.hasClass('open')) {\n      el.removeClass('open');\n      el.addClass('closed');\n    }\n    // Close the drawer if it is open\n    if ($('#drawer-content').hasClass('open')) {\n      app.viewmodel.toggleDrawer();\n    }\n  },\n\n  showDrawerBtn: function() {\n    $('#drawer-btn').removeClass('open');\n    $('#drawer-btn').addClass('closed');\n  },\n\n  openModal: function() {\n    $('#modal').css('display', 'initial');\n    console.log('Open Modal');\n  },\n\n  closeModal: function() {\n    $('#modal').css('display', 'none');\n  },\n\n  init: function() {\n    var button = document.getElementById('drawer-btn');\n    button.addEventListener('click', app.viewmodel.toggleDrawer);\n  }\n};\n\napp.viewmodel.init();\n"],"sourceRoot":"/source/"}