{"version":3,"sources":["wiki.js"],"names":["app","wiki","getWiki","place","wikiInfo","console","log","jQuery","ajax","url","data","action","prop","exintro","exchars","inprop","format","redirects","converttitles","titles","name","dataType","headers","Api-User-Agent","done","firstId","Object","keys","query","pages","page","viewmodel","WikiPage","undefined","content","ambiguityChk","fail","msg","statusText","addError","id","categories","category","title"],"mappings":"AACAA,IAAAC,KAAAD,IAAAC,SAEA,WACAD,IAAAC,MACAC,QAAA,SAAAC,GACAA,EAAAC,aACAC,QAAAC,IAAA,WAEAC,OAAAC,MACAC,IAAA,qCACAC,MACAC,OAAA,QACAC,KAAA,2BACAC,QAAA,GACAC,QAAA,IACAC,OAAA,MACAC,OAAA,OACAC,UAAA,GACAC,cAAA,GACAC,OAAAhB,EAAAiB,QAEAC,SAAA,QACAC,SAAAC,iBAAA,4BAEAC,KAAA,SAAAd,GACA,GAAAe,GAAAC,OAAAC,KAAAjB,EAAAkB,MAAAC,OAAA,GACAC,EAAA,GAAA9B,KAAA+B,UAAAC,SAAAtB,EAAAkB,MAAAC,MAAAJ,GAGAQ,UAAAH,EAAAI,WACAlC,IAAAC,KAAAkC,aAAAzB,EAAAe,IACAtB,EAAAC,SAAA0B,KAGAM,KAAA,SAAA1B,GACA,GAAA2B,GAAA,oBAAA3B,EAAA4B,UACAtC,KAAA+B,UAAAQ,SAAAF,OAMAF,aAAA,SAAAzB,EAAA8B,GACAnC,QAAAC,IAAA,eACA,IAAAmC,GAAA/B,EAAAkB,MAAAC,MAAAW,GAAAC,UAEA,KAAA,GAAAC,KAAAD,GACA,MACA,8CADAA,EAAAC,GAAAC,OAEA,GAEA","file":"main.min.js","sourcesContent":["/* global app jQuery */\napp.wiki = app.wiki || {};\n\n(function() {\n  app.wiki = {\n    getWiki: function(place) {\n      if (!place.wikiInfo()) {\n        console.log('getWiki'); // REMOVE\n\n        jQuery.ajax({\n          url: 'https://en.wikipedia.org/w/api.php',\n          data: {\n            action: 'query',\n            prop: 'categories|extracts|info',\n            exintro: '',\n            exchars: 1000,\n            inprop: 'url',\n            format: 'json',\n            redirects: '',\n            converttitles: '',\n            titles: place.name()\n          },\n          dataType: 'jsonp',\n          headers: {'Api-User-Agent': 'Mark\\'s Udacity Project'}\n\n        }).done(function(data) {\n          var firstId = Object.keys(data.query.pages)['0'];\n          var page = new app.viewmodel.WikiPage(data.query.pages[firstId]);\n\n          // Check to make sure there is worthwhile content\n          if (page.content() !== undefined &&\n          !app.wiki.ambiguityChk(data, firstId)) {\n            place.wikiInfo(page);\n            // app.viewmodel.setInfoWindow(place);\n          }\n        }).fail(function(data) {\n          var msg = 'Wikipedia Error: ' + data.statusText;\n          app.viewmodel.addError(msg);\n        });\n      }\n    },\n\n    // Check for a disambiguity page(ie. no info - only links)\n    ambiguityChk: function(data, id) {\n      console.log('ambiguityChk'); // REMOVE\n      var categories = data.query.pages[id].categories;\n\n      for (var category in categories) {\n        if (categories[category].title ===\n          'Category:All article disambiguation pages') {\n          return true;\n        }\n        return false;\n      }\n    }\n  };\n})();\n"],"sourceRoot":"/source/"}