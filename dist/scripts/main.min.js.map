{"version":3,"sources":["map.js","foursquare.js","wiki.js","viewModel.js"],"names":["app","map","init","home","lat","lng","el","document","getElementById","this","google","maps","Map","center","zoom","minZoom","maxZoom","mapTypeControl","placesApi","places","PlacesService","infoWindow","InfoWindow","maxWidth","$","window","width","event","addListener","viewmodel","setTimeout","mapError","addListenerOnce","getPlaces","createPlaces","forEach","place","idx","plc","Place","push","placeList","name","curPlace","autocomplete","storePlaces","localStorage","setItem","JSON","stringify","retrievePlaces","parse","geometry","location","sameBoundsCheck","console","log","ko","applyBindings","getBounds","request","bounds","types","nearbySearch","results","status","setPhotoUrls","msg","addError","oldBounds","equals","photos","url","getUrl","maxHeight","getPlaceDetails","placeId","data","place_id","getDetails","details","deets","PlaceDetails","createMarker","plcloc","image","icon","scaledSize","Size","marker","Marker","animation","Animation","DROP","attribution","source","title","clickHandler","foursquare","CLIENTID","CLIENTSECRET","baseUrl","version","findPlace","loc","jQuery","ajax","query","ll","client_id","client_secret","v","limit","dataType","done","venue","response","venues","getTips","fail","statusText","id","tips","fourSquare","setInfoWindow","wiki","getWiki","action","prop","exintro","exchars","inprop","format","redirects","converttitles","titles","headers","Api-User-Agent","firstId","Object","keys","pages","page","WikiPage","undefined","content","ambiguityChk","wikiInfo","categories","category","observable","observableArray","curMarker","inputText","frsqr","errorMsg","drawerOpen","showModal","show","rating","open","opening_hours","photo","height","attributions","html_attributions","detailsIcon","frSqrInfo","extract","fullurl","info","mapping","fromJS","frSqrTips","address","formatted_address","phone","formatted_phone_number","website","reviews","Reviews","arr","review","author","author_name","authorUrl","author_url","text","time","clearErrors","setCurrentPlace","getAnimation","toggleBounce","toggleDetails","clickContactInfo","placeFilter","close","toggleDrawer","findPlaceByName","i","length","self","matches","filter","toLowerCase","input","indexOf","setMap","resetFilter","html","setContent","setAnimation","BOUNCE","setModal","awesomplete","Awesomplete","list","addEventListener","value"],"mappings":"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","file":"main.min.js","sourcesContent":["/* global app document google $ window ko localStorage */\napp.map = app.map || {};\n\n(function() {\n  app.map = {\n    // Callback function for Google Maps - Initialize the Map\n    init: function() {\n      var home = {lat: 39.927677, lng: -75.171909};\n      var el = document.getElementById('map-container');\n\n      this.map = new google.maps.Map(el, {\n        center: home,\n        zoom: 14,\n        minZoom: 12,\n        maxZoom: 18,\n        mapTypeControl: false\n      });\n      this.placesApi = new google.maps.places.PlacesService(app.map.map);\n      this.infoWindow = new google.maps.InfoWindow({\n        maxWidth: $(window).width() * 0.7}\n      );\n\n      // Show the drawer button when infowindow closes\n      google.maps.event.addListener(this.infoWindow, 'closeclick', function() {\n        app.viewmodel.infoWindow(false);\n      });\n\n      // Show error message - if maps can't be reached, will be visible\n      setTimeout(function() {\n        app.viewmodel.mapError('There appears to be a problem with Google Maps, please try refreshing the page');\n      }, 5000);\n      // Load places once the maps bounds are set\n      google.maps.event.addListenerOnce(\n        this.map, 'bounds_changed', this.getPlaces\n      );\n    },\n\n    createPlaces: function(places) {\n      places.forEach(function(place, idx) {\n        var plc = new app.viewmodel.Place(place);\n\n        app.viewmodel.places.push(plc);\n        app.viewmodel.placeList.push(plc.name());\n        if (idx === 1) {\n          app.viewmodel.curPlace(plc);\n        }\n      });\n      app.viewmodel.autocomplete();\n    },\n\n    // Likely against TOS, but figure it's fine for educational purposes\n    storePlaces: function(places) {\n      localStorage.setItem('places', JSON.stringify(places));\n    },\n\n    retrievePlaces: function() {\n      var places = JSON.parse(localStorage.places);\n      places.forEach(function(place) {\n        var lat = place.geometry.location.lat;\n        var lng = place.geometry.location.lng;\n        // Make lat/lng into functions to match API results\n        place.geometry.location.lat = function() {\n          return lat;\n        };\n        place.geometry.location.lng = function() {\n          return lng;\n        };\n      });\n      return places;\n    },\n\n    // Get a list of places from Google Maps\n    getPlaces: function() {\n      if (localStorage.places && app.map.sameBoundsCheck()) {\n        console.log('Creating places from storage');\n        app.map.createPlaces(app.map.retrievePlaces());\n        ko.applyBindings(app.viewmodel);\n      } else {\n        localStorage.setItem('bounds', JSON.stringify(app.map.map.getBounds()));\n        // Variables for the request\n        var request = {\n          bounds: app.map.map.getBounds(),\n          types: ['art_gallery', 'museum', 'park']\n        };\n\n        // Call the Places API\n        app.map.placesApi.nearbySearch(request, function(results, status) {\n          console.log('Calling Places API');\n          if (status === 'OK') {\n            app.map.setPhotoUrls(results);\n            app.map.storePlaces(results);\n            app.map.createPlaces(results);\n          } else {\n            console.log('We have a places error');\n            var msg = 'Google Places Error: ' + status;\n            app.viewmodel.addError(msg);\n          }\n          ko.applyBindings(app.viewmodel);\n        });\n      }\n    },\n\n    sameBoundsCheck: function() {\n      var oldBounds = JSON.parse(localStorage.bounds);\n      return app.map.map.getBounds().equals(oldBounds);\n    },\n\n    setPhotoUrls: function(places) {\n      places.forEach(function(place) {\n        if (place.photos) {\n          var url = place.photos[0].getUrl({maxWidth: 200,\n                                            maxHeight: 300});\n          place.photos[0].url = url;\n        }\n      });\n    },\n\n    getPlaceDetails: function(place) {\n      var request = {\n        placeId: place.data.place_id\n      };\n      // Call the Places API, add details to the place\n      app.map.placesApi.getDetails(request, function(details, status) {\n        if (status === 'OK') {\n          var deets = new app.viewmodel.PlaceDetails(details);\n          place.details(deets);\n        } else {\n          var msg = 'Google Places Error while getting details: ' + status;\n          app.viewmodel.addError(msg);\n        }\n      });\n    },\n\n    createMarker: function(place) {\n      // Location for the Marker\n      var plcloc = place.data.geometry.location;\n      // Set icon and icon size\n      var image = {\n        url: place.data.icon,\n        scaledSize: new google.maps.Size(50, 50)\n      };\n      // Create the marker\n      var marker = new google.maps.Marker({\n        animation: google.maps.Animation.DROP,\n        attribution: {source: 'mrkjesus2.github.io/Neighborhood-Map'},\n        icon: image,\n        map: app.map.map,\n        place: {\n          location: {lat: plcloc.lat(), lng: plcloc.lng()},\n          placeId: place.data.place_id\n        },\n        title: place.data.name\n      });\n\n      google.maps.event.addListener(marker, 'click', function() {\n        app.viewmodel.clickHandler(place);\n      });\n      return marker;\n    }\n  };\n})();\n","/* global app jQuery */\napp.foursquare = app.foursquare || {};\n\n(function() {\n  // TODO: Move this to a config file (keep out of git)\n  var CLIENTID = 'ZBGAM3NOJCK4P345ELK2JIB232FMDENJ05GXYQRSAHOHURJR';\n  var CLIENTSECRET = 'RGEF2DNONIR0AN2GHSIIMGZWLT0IH5JSJCJ5AGFAJ2WZDGLH';\n\n  app.foursquare = {\n    baseUrl: 'https://api.foursquare.com/v2/venues/',\n    version: '20140806',\n\n    findPlace: function(place) {\n      var loc = place.data.geometry.location;\n      // Call the foursquare API\n      jQuery.ajax({\n        url: this.baseUrl + 'search',\n        data: {\n          query: place.name(),\n          ll: loc.lat() + ',' + loc.lng(),\n          // Disabled lines due to API requirements\n          client_id: CLIENTID, // eslint-disable-line camelcase\n          client_secret: CLIENTSECRET, // eslint-disable-line camelcase\n          v: this.version,\n          limit: '1'\n        },\n        dataType: 'json'\n\n      }).done(function(data) {\n        // Best matching venue\n        var venue = data.response.venues[0];\n\n        // Call the API again for venue tips\n        app.foursquare.getTips(venue, place);\n      }).fail(function(data) {\n        var msg = 'Foursquare Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    },\n\n    getTips: function(venue, place) {\n      jQuery.ajax({\n        url: this.baseUrl + venue.id + '/tips',\n        data: {\n          // Disabled lines due to API requirements\n          client_id: CLIENTID, // eslint-disable-line camelcase\n          client_secret: CLIENTSECRET, // eslint-disable-line camelcase\n          v: this.version\n        },\n        dataType: 'json'\n      }).done(function(data) {\n        var tips = data.response.tips;\n        // Assign details to place\n        app.viewmodel.fourSquare(venue, tips, place);\n        app.viewmodel.setInfoWindow(place);\n      }).fail(function(data) {\n        var msg = 'Foursquare Tips Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    }\n  };\n})();\n","/* global app jQuery */\napp.wiki = app.wiki || {};\n\n(function() {\n  app.wiki = {\n    getWiki: function(place) {\n      jQuery.ajax({\n        url: 'https://en.wikipedia.org/w/api.php',\n        data: {\n          action: 'query',\n          prop: 'categories|extracts|info',\n          exintro: '',\n          exchars: 1000,\n          inprop: 'url',\n          format: 'json',\n          redirects: '',\n          converttitles: '',\n          titles: place.name()\n        },\n        dataType: 'jsonp',\n        headers: {'Api-User-Agent': 'Mark\\'s Udacity Project'}\n\n      }).done(function(data) {\n        var firstId = Object.keys(data.query.pages)['0'];\n        var page = new app.viewmodel.WikiPage(data.query.pages[firstId]);\n\n        // Check to make sure there is worthwhile content\n        if (page.content() !== undefined &&\n        !app.wiki.ambiguityChk(data, firstId)) {\n          place.wikiInfo(page);\n          app.viewmodel.setInfoWindow(place);\n        }\n      }).fail(function(data) {\n        var msg = 'Wikipedia Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    },\n\n    // Check for a disambiguity page(ie. no info - only links)\n    ambiguityChk: function(data, id) {\n      var categories = data.query.pages[id].categories;\n\n      for (var category in categories) {\n        if (categories[category].title ===\n          'Category:All article disambiguation pages') {\n          return true;\n        }\n        return false;\n      }\n    }\n  };\n})();\n","/* global app ko $ google document Awesomplete */\n\napp.viewmodel = app.viewmodel || {};\n\napp.viewmodel = {\n  mapError: ko.observable(),\n  places: ko.observableArray(),\n  placeList: [],\n  curMarker: null,\n  curPlace: ko.observable(),\n  inputText: ko.observable(''),\n  frsqr: null,\n  errorMsg: ko.observableArray([]),\n  infoWindow: ko.observable(false),\n  drawerOpen: ko.observable(false),\n  showModal: ko.observable(false),\n\n/* ************* */\n/* Constructors */\n/* ************ */\n  Place: function(place) {\n    this.show = ko.observable(true);\n\n    // Info returned from map.getPlaces\n    this.name = ko.observable(place.name);\n    this.rating = ko.observable(place.rating);\n    this.open = ko.observable(\n      place.opening_hours ? 'Open Now' : 'Closed' || 'Hours not available'\n    );\n    if (place.photos) {\n      this.photo = ko.observable({\n        url: ko.observable(place.photos[0].url),\n        height: ko.observable(place.photos[0].height),\n        width: ko.observable(place.photos[0].width),\n        attributions: ko.observable(place.photos[0].html_attributions)\n      } || {});\n    } else {\n      this.photo = ko.observable('none');\n    }\n    this.data = place;\n    this.detailsIcon = ko.observable('fa fa-chevron-circle-up');\n\n    // Info from elsewhere\n    this.details = ko.observable();\n    this.marker = app.map.createMarker(this);\n    this.wikiInfo = ko.observable();\n    this.frSqrInfo = ko.observable();\n  },\n\n  WikiPage: function(page) {\n    this.content = ko.observable(page.extract);\n    this.url = ko.observable(page.fullurl);\n  },\n\n  fourSquare: function(info, tips, place) {\n    // Map FourSquare responses to observables\n    var frSqrInfo = ko.mapping.fromJS(info, {});\n    var frSqrTips = ko.mapping.fromJS(tips, {});\n    // Create a child object for tips response\n    frSqrInfo.tips = frSqrTips;\n    // Assign the info to the place\n    place.frSqrInfo(frSqrInfo);\n  },\n\n  PlaceDetails: function(details) {\n    this.show = ko.observable(true);\n    this.address = ko.observable(details.formatted_address);\n    this.phone = ko.observable(details.formatted_phone_number);\n    this.photos = ko.observableArray(details.photos);\n    this.rating = ko.observable(details.rating);\n    this.website = ko.observable(details.website);\n    this.reviews = ko.observableArray(\n      new app.viewmodel.Reviews(details.reviews)\n    );\n  },\n\n  Reviews: function(reviews) {\n    var arr = [];\n    reviews.forEach(function(review) {\n      arr.push({\n        author: ko.observable(review.author_name),\n        authorUrl: ko.observable(review.author_url),\n        text: ko.observable(review.text),\n        time: ko.observable(review.time)\n      });\n    });\n    return arr;\n  },\n\n/* **************** */\n/* Helper Functions */\n/* **************** */\n  addError: function(msg) {\n    this.errorMsg = this.errorMsg || ko.observableArray([]);\n    this.errorMsg.push(msg);\n    setTimeout(function() {\n      app.viewmodel.clearErrors();\n    }, 2000);\n  },\n\n  clearErrors: function() {\n    this.errorMsg([]);\n  },\n\n  setCurrentPlace: function(place) {\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.toggleBounce();\n    }\n    app.viewmodel.curPlace(place);\n  },\n\n  toggleDetails: function(place) {\n    if (place.details() !== undefined && place.details().show() === true) {\n      place.details().show(false);\n      place.detailsIcon('fa fa-chevron-circle-up');\n    } else {\n      app.map.getPlaceDetails(place);\n      app.viewmodel.setCurrentPlace(place);\n      place.detailsIcon('fa fa-chevron-circle-down');\n    }\n  },\n\n  clickContactInfo: function() {\n    this.inputText(this.curPlace().name());\n    app.viewmodel.placeFilter();\n    this.toggleDetails(app.viewmodel.curPlace());\n    app.map.infoWindow.close();\n    app.viewmodel.infoWindow(false);\n    this.toggleDrawer();\n  },\n\n  // Called when the marker or list item is clicked\n  clickHandler: function(place) {\n    var plc = place || this;\n\n    // Call for data\n    app.wiki.getWiki(plc);\n    app.foursquare.findPlace(plc);\n\n    // Handle map actions\n    app.map.infoWindow.close();\n    if (app.viewmodel.drawerOpen()) {\n      app.viewmodel.toggleDrawer();\n    }\n    app.viewmodel.setCurrentPlace(plc);\n    app.viewmodel.toggleBounce();\n  },\n\n  findPlaceByName: function(name) {\n    var places = app.viewmodel.places();\n    for (var i = places.length - 1; i >= 0; i--) {\n      if (places[i].name() === name) {\n        return places[i];\n      }\n    }\n    return false;\n  },\n\n  placeFilter: function() {\n    var self = this;\n\n    if (self.inputText()) {\n      var matches = self.places().filter(function(place) {\n        var name = place.name().toLowerCase();\n        var input = self.inputText().toLowerCase();\n        return name.indexOf(input) >= 0;\n      });\n\n      // Set markers and list items to hidden\n      self.places().forEach(function(place) {\n        place.marker.setMap(null);\n        place.show(false);\n      });\n\n      // Add remaining places to the map and list\n      matches.forEach(function(place) {\n        place.marker.setMap(app.map.map);\n        place.show(true);\n      });\n    } else {\n      // Set all place markers on the map\n      self.places().forEach(function(place) {\n        place.marker.setMap(app.map.map);\n        place.show(true);\n      });\n    }\n\n    return true;\n  },\n\n  resetFilter: function() {\n    app.viewmodel.inputText('');\n    app.viewmodel.placeFilter();\n    // Close details which are open\n    var places = this.places();\n    for (var i = places.length - 1; i >= 0; i--) {\n      if (places[i].details() && places[i].details().show()) {\n        places[i].details().show(false);\n        places[i].detailsIcon('fa fa-chevron-circle-up');\n      }\n    }\n  },\n\n  setInfoWindow: function(place) {\n    var content = $('#infowindow').html();\n\n    app.map.infoWindow.setContent(content);\n    app.map.infoWindow.open(app.map.map, place.marker);\n    // Hide the drawer button while infowindow is open\n    app.viewmodel.infoWindow(true);\n  },\n\n  toggleBounce: function() {\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.curPlace().marker.setAnimation(null);\n    } else {\n      var marker = app.viewmodel.curPlace().marker;\n      marker.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  },\n\n  toggleDrawer: function() {\n    app.viewmodel.drawerOpen(!app.viewmodel.drawerOpen());\n  },\n\n  setModal: function() {\n    app.viewmodel.showModal(!app.viewmodel.showModal());\n  },\n\n  autocomplete: function() {\n    var input = document.getElementById('place-input');\n    var awesomplete = new Awesomplete(input);\n    awesomplete.list = app.viewmodel.placeList;\n\n    input.addEventListener('awesomplete-selectcomplete', function() {\n      var place = app.viewmodel.findPlaceByName(this.value);\n      console.log(place);\n      app.viewmodel.setCurrentPlace(place);\n      app.viewmodel.toggleDetails(place);\n      app.viewmodel.inputText(this.value);\n      app.viewmodel.placeFilter();\n    });\n  }\n};\n\n"],"sourceRoot":"/source/"}