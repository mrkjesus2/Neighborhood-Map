{"version":3,"sources":["main.js","map.js","foursquare.js","wiki.js","viewModel.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","update","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","app","map","init","home","lat","lng","el","document","getElementById","this","google","maps","Map","center","zoom","minZoom","maxZoom","mapTypeControl","placesApi","places","PlacesService","infoWindow","InfoWindow","maxWidth","$","width","event","addListener","removeClass","addClass","setTimeout","css","addListenerOnce","getPlaces","createPlaces","forEach","place","idx","plc","viewmodel","Place","push","log","curPlace","storePlaces","localStorage","setItem","JSON","stringify","retrievePlaces","parse","geometry","ko","applyBindings","request","bounds","getBounds","types","nearbySearch","results","status","setPhotoUrls","msg","addError","photos","url","getUrl","maxHeight","getPlaceDetails","placeId","data","place_id","getDetails","details","deets","PlaceDetails","createMarker","plcloc","marker","Marker","animation","Animation","DROP","attribution","source","icon","title","name","clickHandler","foursquare","CLIENTID","CLIENTSECRET","baseUrl","version","findPlace","loc","jQuery","ajax","query","ll","client_id","client_secret","v","limit","dataType","done","venue","response","venues","getTips","fail","statusText","id","tips","fourSquare","wiki","getWiki","action","prop","exintro","exchars","inprop","format","redirects","converttitles","titles","headers","Api-User-Agent","firstId","Object","keys","pages","page","WikiPage","undefined","content","ambiguityChk","wikiInfo","categories","category","observableArray","curMarker","observable","inputText","frsqr","errorMsg","show","rating","open","opening_hours","photo","height","attributions","html_attributions","detailsIcon","frSqrInfo","extract","fullurl","info","mapping","fromJS","frSqrTips","address","formatted_address","phone","formatted_phone_number","website","reviews","Reviews","arr","review","author","author_name","authorUrl","author_url","text","time","clearErrors","setCurrentPlace","getAnimation","toggleBounce","toggleDetails","clickContactInfo","trigger","close","closeDrawer","toggleDrawer","setInfoWindow","placeFilter","self","matches","filter","toLowerCase","input","indexOf","setMap","resetFilter","setAnimation","BOUNCE","html","setContent","els","getElementsByClassName","toggleClass","hasClass","openModal","closeModal","button","addEventListener"],"mappings":"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","file":"main.min.js","sourcesContent":["/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n\n/* I disabled the service worker */\n/* Uncomment everyting from here to get back to default */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // Check to see if there's an updated version of service-worker.js with\n      // new files to cache:\n      // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-registration-update-method\n      if (typeof registration.update === 'function') {\n        registration.update();\n      }\n\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n})();\n\n/* global */\nvar app = app || {};\n\n// $(function() {\n//   'use strict';\n// });\n","/* global app document google $ window ko localStorage */\napp.map = app.map || {};\n\n(function() {\n  app.map = {\n    // Callback function for Google Maps - Initialize the Map\n    // Calls getPlaces and createMarker to fill ViewModel places array\n    init: function() {\n      var home = {lat: 39.927677, lng: -75.171909};\n      var el = document.getElementById('map-container');\n\n      this.map = new google.maps.Map(el, {\n        center: home,\n        zoom: 14,\n        minZoom: 12,\n        maxZoom: 18,\n        mapTypeControl: false\n      });\n      // console.log('Map init'); // REMOVE\n      this.placesApi = new google.maps.places.PlacesService(app.map.map);\n      this.infoWindow = new google.maps.InfoWindow({\n        maxWidth: $(window).width() * 0.7}\n      );\n      // Show the drawer button when infowindow closes\n      google.maps.event.addListener(this.infoWindow, 'closeclick', function() {\n        $('#drawer-btn').removeClass('open');\n        $('#drawer-btn').addClass('closed');\n      });\n\n      // Show error message - if maps can't be reached it will be visible\n      setTimeout(function() {\n        $('#maps-error').css('display', 'inline');\n      }, 5000);\n      // Load places once the maps bounds are set\n      google.maps.event.addListenerOnce(this.map, 'bounds_changed', this.getPlaces);\n    },\n\n    createPlaces: function(places) {\n      places.forEach(function(place, idx) {\n        var plc = new app.viewmodel.Place(place);\n\n        app.viewmodel.places.push(plc);\n        if (idx === 1) {\n          console.log('set current place');\n          app.viewmodel.curPlace(plc);\n        }\n      });\n    },\n\n    // Likely against TOS, but figure it's fine for educational purposes\n    storePlaces: function(places) {\n      localStorage.setItem('places', JSON.stringify(places));\n    },\n\n    retrievePlaces: function() {\n      var places = JSON.parse(localStorage.places);\n      places.forEach(function(place) {\n        var lat = place.geometry.location.lat;\n        var lng = place.geometry.location.lng;\n        // Make lat/lng into functions to match API results\n        place.geometry.location.lat = function() {\n          return lat;\n        };\n        place.geometry.location.lng = function() {\n          return lng;\n        };\n      });\n      return places;\n    },\n    // Get a list of places from Google Maps\n    getPlaces: function() {\n      // console.log('Map getPlaces'); // REMOVE\n      if (localStorage.places) {\n        console.log('Creating places from storage');\n        app.map.createPlaces(app.map.retrievePlaces());\n        ko.applyBindings(app.viewmodel);\n      } else {\n        // Variables for the request\n        var request = {\n          bounds: app.map.map.getBounds(),\n          types: ['art_gallery', 'museum', 'park']\n        };\n\n        // Call the Places API\n        app.map.placesApi.nearbySearch(request, function(results, status) {\n          console.log('Calling Places API');\n          if (status === 'OK') {\n            // console.log(results[0]);\n            app.map.setPhotoUrls(results);\n            app.map.storePlaces(results);\n            app.map.createPlaces(results);\n          } else {\n            console.log('We have a places error');\n            var msg = 'Google Places Error: ' + status;\n            app.viewmodel.addError(msg);\n          }\n          ko.applyBindings(app.viewmodel);\n        });\n      }\n    },\n\n    setPhotoUrls: function(places) {\n      places.forEach(function(place) {\n        // console.log(place.photos);\n        if (place.photos) {\n          // TODO: Right image size?\n          var url = place.photos[0].getUrl({maxWidth: 200,\n                                            maxHeight: 200});\n          console.log(typeof url);\n          place.photos[0].url = url;\n          // console.log(place.photos[0]);\n        }\n      });\n    },\n\n    getPlaceDetails: function(place) {\n      // console.log('Map getPlaceDetails'); // REMOVE\n      var request = {\n        placeId: place.data.place_id\n      };\n      // Call the Places API, add details to the place\n      app.map.placesApi.getDetails(request, function(details, status) {\n        console.log('status', status);\n        if (status === 'OK') {\n          var deets = new app.viewmodel.PlaceDetails(details);\n          place.details(deets);\n        } else {\n          var msg = 'Google Places Error while getting details: ' + status;\n          app.viewmodel.addError(msg);\n        }\n      });\n    },\n\n    createMarker: function(place) {\n      // console.log('Map createMarker'); // REMOVE\n      // Location for the Marker\n      var plcloc = place.data.geometry.location;\n      // Create the marker\n      var marker = new google.maps.Marker({\n        animation: google.maps.Animation.DROP,\n        attribution: {source: 'mrkjesus2.github.io/Neighborhood-Map'},\n        icon: place.data.icon,\n        map: app.map.map,\n        // optimized: false,  // If problems with animation, uncomment //REMOVE\n        place: {\n          location: {lat: plcloc.lat(), lng: plcloc.lng()},\n          placeId: place.data.place_id\n        },\n        title: place.data.name\n      });\n\n      google.maps.event.addListener(marker, 'click', function() {\n        app.viewmodel.clickHandler(place);\n      });\n      return marker;\n    }\n  };\n})();\n","/* global app jQuery */\napp.foursquare = app.foursquare || {};\n\n(function() {\n  // TODO: Move this to a config file (keep out of git)\n  var CLIENTID = 'ZBGAM3NOJCK4P345ELK2JIB232FMDENJ05GXYQRSAHOHURJR';\n  var CLIENTSECRET = 'RGEF2DNONIR0AN2GHSIIMGZWLT0IH5JSJCJ5AGFAJ2WZDGLH';\n\n  app.foursquare = {\n    baseUrl: 'https://api.foursquare.com/v2/venues/',\n    version: '20140806',\n\n    findPlace: function(place) {\n      // console.log('FourSquare findPlace'); // REMOVE\n      var loc = place.data.geometry.location;\n      // Call the foursquare API\n      jQuery.ajax({\n        url: this.baseUrl + 'search',\n        data: {\n          query: place.name(),\n          ll: loc.lat() + ',' + loc.lng(),\n          // Disabled lines due to API requirements\n          client_id: CLIENTID, // eslint-disable-line camelcase\n          client_secret: CLIENTSECRET, // eslint-disable-line camelcase\n          v: this.version,\n          limit: '1'\n        },\n        dataType: 'json'\n\n      }).done(function(data) {\n        // Best matching venue\n        var venue = data.response.venues[0];\n\n        // Callback the API for venue tips\n        app.foursquare.getTips(venue, place);\n        // console.log('Finished FourSquare'); // REMOVE\n      }).fail(function(data) {\n        var msg = 'Foursquare Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    },\n\n    getTips: function(venue, place) {\n      jQuery.ajax({\n        url: this.baseUrl + venue.id + '/tips',\n        data: {\n          // Disabled lines due to API requirements\n          client_id: CLIENTID, // eslint-disable-line camelcase\n          client_secret: CLIENTSECRET, // eslint-disable-line camelcase\n          v: this.version\n        },\n        dataType: 'json'\n      }).done(function(data) {\n        var tips = data.response.tips;\n        // Assign details to place\n        app.viewmodel.fourSquare(venue, tips, place);\n      }).fail(function(data) {\n        var msg = 'Foursquare Tips Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    }\n  };\n})();\n\n// specials: {\n//   count:\n//   items: [{\n//     description:\n//     finePrint:\n//     icon:\n//     id:\n//     interaction: {\n\n//     }\n//     message:\n//     provider:\n//     redemption:\n//     state:\n//     title:\n//     type:\n//     unlocked:\n//   }]\n// }\n\n// tips: {\n//   count:\n//   groups: {\n//     count:\n//     items:\n//     name:\n//     type:\n//   }\n// }\n","/* global app jQuery */\napp.wiki = app.wiki || {};\n\n(function() {\n  app.wiki = {\n    getWiki: function(place) {\n      // console.log('Wiki getWiki'); // REMOVE\n      jQuery.ajax({\n        url: 'https://en.wikipedia.org/w/api.php',\n        data: {\n          action: 'query',\n          prop: 'categories|extracts|info',\n          exintro: '',\n          exchars: 1000,\n          inprop: 'url',\n          format: 'json',\n          redirects: '',\n          converttitles: '',\n          titles: place.name()\n        },\n        dataType: 'jsonp',\n        headers: {'Api-User-Agent': 'Mark\\'s Udacity Project'}\n\n      }).done(function(data) {\n        var firstId = Object.keys(data.query.pages)['0'];\n        var page = new app.viewmodel.WikiPage(data.query.pages[firstId]);\n\n        // Check to make sure there is worthwhile content\n        if (page.content() !== undefined &&\n        !app.wiki.ambiguityChk(data, firstId)) {\n          place.wikiInfo(page);\n        }\n        // console.log('Finished getWiki'); // REMOVE\n      }).fail(function(data) {\n        var msg = 'Wikipedia Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    },\n\n    // Check for a disambiguity page(ie. no info - only links)\n    ambiguityChk: function(data, id) {\n      // console.log('Wiki ambiguityChk'); // REMOVE\n      var categories = data.query.pages[id].categories;\n\n      for (var category in categories) {\n        if (categories[category].title ===\n          'Category:All article disambiguation pages') {\n          return true;\n        }\n        return false;\n      }\n    }\n  };\n})();\n","// TODO: Get rid of 'REMOVE' lines\n/* global app ko $ google document */\n\napp.viewmodel = app.viewmodel || {};\n\napp.viewmodel = {\n  places: ko.observableArray(),\n  curMarker: null,\n  curPlace: ko.observable(),\n  inputText: ko.observable(''),\n  frsqr: null,\n  errorMsg: ko.observableArray([]),\n\n/* ************* */\n/* Constructors */\n/* ************ */\n  Place: function(place) {\n    this.show = ko.observable(true);\n\n    // Info returned from map.getPlaces\n    this.name = ko.observable(place.name);\n    this.rating = ko.observable(place.rating);\n    this.open = ko.observable(\n      place.opening_hours ? 'Open Now' : 'Closed' || 'Hours not available'\n    );\n    if (place.photos) {\n      this.photo = ko.observable({\n        url: ko.observable(place.photos[0].url),\n        height: ko.observable(place.photos[0].height),\n        width: ko.observable(place.photos[0].width),\n        attributions: ko.observable(place.photos[0].html_attributions)\n      } || {});\n    } else {\n      this.photo = ko.observable('none');\n    }\n    this.data = place;\n    this.detailsIcon = ko.observable('fa fa-chevron-circle-up');\n\n    // Info from elsewhere\n    this.details = ko.observable();\n    this.marker = app.map.createMarker(this);\n    this.wikiInfo = ko.observable();\n    this.frSqrInfo = ko.observable();\n    // this.frSqrInfo.tips = ko.observable();\n    // console.log('Place Constructor');  // REMOVE\n  },\n\n  WikiPage: function(page) {\n    this.content = ko.observable(page.extract);\n    this.url = ko.observable(page.fullurl);\n  },\n\n  fourSquare: function(info, tips, place) {\n    // console.log('FourSquare Constructor'); // REMOVE\n    // Map FourSquare responses to observables\n    var frSqrInfo = ko.mapping.fromJS(info, {});\n    var frSqrTips = ko.mapping.fromJS(tips, {});\n    // Create a child object for tips response\n    frSqrInfo.tips = frSqrTips;\n    // Assign the info to the place\n    place.frSqrInfo(frSqrInfo);\n  },\n\n  PlaceDetails: function(details) {\n    this.show = ko.observable(true);\n    this.address = ko.observable(details.formatted_address);\n    this.phone = ko.observable(details.formatted_phone_number);\n    this.photos = ko.observableArray(details.photos);\n    this.rating = ko.observable(details.rating);\n    this.website = ko.observable(details.website);\n    this.reviews = ko.observableArray(new app.viewmodel.Reviews(details.reviews));\n    // console.log('PlaceDetails'); // REMOVE\n  },\n\n  Reviews: function(reviews) {\n    var arr = [];\n    reviews.forEach(function(review) {\n      arr.push({\n        author: ko.observable(review.author_name),\n        authorUrl: ko.observable(review.author_url),\n        text: ko.observable(review.text),\n        time: ko.observable(review.time)\n      });\n    });\n    return arr;\n  },\n\n/* **************** */\n/* Helper Functions */\n/* **************** */\n  addError: function(msg) {\n    this.errorMsg = this.errorMsg || ko.observableArray([]);\n    this.errorMsg.push(msg);\n    setTimeout(function() {\n      app.viewmodel.clearErrors();\n    }, 2000);\n  },\n\n  clearErrors: function() {\n    this.errorMsg([]);\n  },\n\n  setCurrentPlace: function(place) {\n    // console.log('setCurrentPlace'); // REMOVE\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.toggleBounce();\n    }\n    app.viewmodel.curPlace(place);\n  },\n\n  toggleDetails: function(place) {\n    if (place.details() !== undefined && place.details().show() === true) {\n      place.details().show(false);\n      place.detailsIcon('fa fa-chevron-circle-up');\n    } else {\n      app.map.getPlaceDetails(place);\n      app.viewmodel.setCurrentPlace(place);\n      place.detailsIcon('fa fa-chevron-circle-down');\n    }\n  },\n\n  clickContactInfo: function() {\n    this.inputText(this.curPlace().name());\n    $('#drawer-top input').trigger('input');\n    this.toggleDetails(app.viewmodel.curPlace());\n    app.map.infoWindow.close();\n    this.closeDrawer();\n    this.toggleDrawer();\n  },\n\n  // Called when the marker or list item is clicked\n  clickHandler: function(place) {\n    // console.log('clickHandler'); // REMOVE\n    var plc = place || this;\n\n    // Call for data\n    app.wiki.getWiki(plc);\n    app.foursquare.findPlace(plc);\n    // app.map.getPlaceDetails(plc);\n\n    // Handle map actions\n    app.map.infoWindow.close();\n    app.viewmodel.closeDrawer();\n    app.viewmodel.setCurrentPlace(plc);\n    app.viewmodel.toggleBounce();\n    // app.viewmodel.markerSetup(plc);\n\n    // Timeout to avoid two calls from success callbacks\n    setTimeout(function() {\n      app.viewmodel.setInfoWindow(plc);\n      // Hide the drawer button while infowindow is open\n      $('#drawer-btn').removeClass('closed');\n      $('#drawer-btn').addClass('open');\n    }, 300);\n  },\n\n  placeFilter: function() {\n    // console.log('placeFilter'); // REMOVE\n    var self = this;\n    // A cushion to allow inputText to change\n    setTimeout(function() {\n      // Get the matching places\n      if (self.inputText()) {\n        var matches = self.places().filter(function(place) {\n          var name = place.name().toLowerCase();\n          var input = self.inputText().toLowerCase();\n          return name.indexOf(input) === 0;\n        });\n\n        // Set markers and list items to hidden\n        self.places().forEach(function(place) {\n          place.marker.setMap(null);\n          place.show(false);\n        });\n\n        // Add remaining places to the map and list\n        matches.forEach(function(place) {\n          place.marker.setMap(app.map.map);\n          place.show(true);\n        });\n      } else {\n        self.places().forEach(function(place) {\n          place.marker.setMap(app.map.map);\n          place.show(true);\n        });\n      }\n    }, 100);\n\n    // Must return true to allow default behavior(Filling the input box)\n    return true;\n  },\n\n  resetFilter: function() {\n    app.viewmodel.inputText('');\n    $('#drawer-top input').trigger('input');\n  },\n\n  toggleBounce: function() {\n    // console.log('Map toggleBounce'); // REMOVE\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.curPlace().marker.setAnimation(null);\n    } else {\n      var marker = app.viewmodel.curPlace().marker;\n      marker.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  },\n\n  setInfoWindow: function(place) {\n    var content = $('#infowindow').html();\n\n    app.map.infoWindow.setContent(content);\n    app.map.infoWindow.open(app.map.map, place.marker);\n  },\n\n  toggleDrawer: function() {\n    // console.log('toggleDrawer'); // REMOVE\n    var els = document.getElementsByClassName('drawer');\n    $(els).toggleClass('closed open');\n    // app.viewmodel.inputText('');\n  },\n\n  closeDrawer: function() {\n    // console.log('closeDrawer'); // REMOVE\n    // Reset drawer button if infowindow is open\n    var el = $('#drawer-btn');\n    if (el.hasClass('open')) {\n      el.removeClass('open');\n      el.addClass('closed');\n    }\n    // Close the drawer if it is open\n    if ($('#drawer-content').hasClass('open')) {\n      app.viewmodel.toggleDrawer();\n    }\n  },\n\n  openModal: function() {\n    $('#modal').css('display', 'initial');\n    console.log('Open Modal');\n  },\n\n  closeModal: function() {\n    $('#modal').css('display', 'none');\n  },\n\n  init: function() {\n    // console.log('init'); // REMOVE\n    var button = document.getElementById('drawer-btn');\n    button.addEventListener('click', app.viewmodel.toggleDrawer);\n  }\n};\n\napp.viewmodel.init();\n// Moved to map.getPlaces to avoid typeErrors on current place\n// ko.applyBindings(app.viewmodel);\n"],"sourceRoot":"/source/"}