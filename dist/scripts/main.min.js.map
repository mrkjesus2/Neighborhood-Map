{"version":3,"sources":["map.js","foursquare.js","wiki.js","viewModel.js"],"names":["app","map","init","console","log","home","lat","lng","el","document","getElementById","this","google","maps","Map","center","zoom","minZoom","maxZoom","mapTypeControl","placesApi","places","PlacesService","setTimeout","viewmodel","mapError","event","addListenerOnce","getPlaces","createInfoWindow","place","content","infoWindow","infoWindowLoaded","InfoWindow","maxWidth","$","window","width","addListener","ko","applyBindings","open","marker","clickHandler","createPlaces","forEach","idx","plc","Place","push","placeList","name","curPlace","autocomplete","storePlaces","localStorage","setItem","JSON","stringify","retrievePlaces","parse","geometry","location","sameBoundsCheck","getBounds","request","bounds","types","nearbySearch","results","status","setPhotoUrls","msg","addError","oldBounds","equals","photos","url","getUrl","maxHeight","getPlaceDetails","placeId","data","place_id","getDetails","details","deets","PlaceDetails","createMarker","plcloc","image","icon","scaledSize","Size","Marker","animation","Animation","DROP","attribution","source","title","foursquare","CLIENTID","CLIENTSECRET","baseUrl","version","findPlace","frSqrInfo","loc","jQuery","ajax","query","ll","client_id","client_secret","v","limit","dataType","done","venue","response","venues","getTips","fail","statusText","id","tips","fourSquare","wiki","getWiki","wikiInfo","action","prop","exintro","exchars","inprop","format","redirects","converttitles","titles","headers","Api-User-Agent","firstId","Object","keys","pages","page","WikiPage","undefined","ambiguityChk","categories","category","observable","observableArray","curMarker","inputText","frsqr","errorMsg","drawerOpen","showModal","show","rating","opening_hours","photo","height","attributions","html_attributions","detailsIcon","extract","fullurl","info","mapping","fromJS","frSqrTips","address","formatted_address","phone","formatted_phone_number","website","reviews","Reviews","arr","review","author","author_name","authorUrl","author_url","text","time","clearErrors","setCurrentPlace","getAnimation","toggleBounce","toggleDetails","clickContactInfo","placeFilter","close","toggleDrawer","findPlaceByName","i","length","self","matches","filter","toLowerCase","input","indexOf","setMap","resetFilter","setAnimation","BOUNCE","setModal","awesomplete","Awesomplete","list","addEventListener","value"],"mappings":"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","file":"main.min.js","sourcesContent":["/* global app document google $ window ko localStorage */\napp.map = app.map || {};\n\n(function() {\n  app.map = {\n    // Callback function for Google Maps - Initialize the Map\n    init: function() {\n      console.log('map.init'); // REMOVE\n      var home = {lat: 39.927677, lng: -75.171909};\n      var el = document.getElementById('map-container');\n\n      this.map = new google.maps.Map(el, {\n        center: home,\n        zoom: 14,\n        minZoom: 12,\n        maxZoom: 18,\n        mapTypeControl: false\n      });\n      this.placesApi = new google.maps.places.PlacesService(app.map.map);\n\n      // TODO: Fix error handling\n      // Show error message - if maps can't be reached, will be visible\n      setTimeout(function() {\n        app.viewmodel.mapError('There appears to be a problem with Google Maps, please try refreshing the page');\n      }, 5000);\n      // Load places once the maps bounds are set\n      google.maps.event.addListenerOnce(\n        this.map, 'bounds_changed', this.getPlaces\n      );\n    },\n\n    // with a little help from 'http://jsfiddle.net/G6MXd/4/'\n    createInfoWindow: function(place) {\n      console.log('createInfoWindow'); // REMOVE\n      var content =\n        '<div id=\"test\"\\\n          data-bind=\"template: {name: \\'infowindow\\', data: curPlace}\">\\\n        </div>';\n\n      if (!this.infoWindow) {\n        console.log('Initializing infoWindow'); // REMOVE\n        var infoWindowLoaded = false;\n        this.infoWindow = new google.maps.InfoWindow({\n          maxWidth: $(window).width() * 0.7,\n          content: content\n        });\n\n        google.maps.event.addListener(this.infoWindow, 'domready', function() {\n          if (!infoWindowLoaded) {\n            ko.applyBindings(app.viewmodel, $('#test')[0]);\n            infoWindowLoaded = true;\n          }\n        });\n        // TODO: Likely need a listener on 'content_changed' or 'position_changed' that adjusts the window(centers infowindow)\n      }\n\n      this.infoWindow.open(app.map.map, place.marker); // work this out\n      app.viewmodel.clickHandler(place);\n\n      // Hide the drawer button while window is open\n      app.viewmodel.infoWindow(true);\n\n      // Show the drawer button when infowindow closes\n      google.maps.event.addListener(this.infoWindow, 'closeclick', function() {\n        app.viewmodel.infoWindow(false);\n      });\n    },\n\n    createPlaces: function(places) {\n      console.log('createPlaces'); // REMOVE\n      places.forEach(function(place, idx) {\n        var plc = new app.viewmodel.Place(place);\n\n        app.viewmodel.places.push(plc);\n        app.viewmodel.placeList.push(plc.name());\n        if (idx === 1) {\n          app.viewmodel.curPlace(plc);\n        }\n      });\n      app.viewmodel.autocomplete();\n    },\n\n    // Likely against TOS, but figure it's fine for educational purposes\n    storePlaces: function(places) {\n      console.log('storePlaces'); // REMOVE\n      localStorage.setItem('places', JSON.stringify(places));\n    },\n\n    retrievePlaces: function() {\n      console.log('retrievePlaces'); // REMOVE\n      var places = JSON.parse(localStorage.places);\n      places.forEach(function(place) {\n        var lat = place.geometry.location.lat;\n        var lng = place.geometry.location.lng;\n        // Make lat/lng into functions to match API results\n        place.geometry.location.lat = function() {\n          return lat;\n        };\n        place.geometry.location.lng = function() {\n          return lng;\n        };\n      });\n      return places;\n    },\n\n    // Get a list of places from Google Maps\n    getPlaces: function() {\n      console.log('getPlaces'); // REMOVE\n      if (localStorage.places && app.map.sameBoundsCheck()) {\n        console.log('Creating places from storage');\n        app.map.createPlaces(app.map.retrievePlaces());\n        ko.applyBindings(app.viewmodel, $('.container')[0]);\n      } else {\n        localStorage.setItem('bounds', JSON.stringify(app.map.map.getBounds()));\n        // Variables for the request\n        var request = {\n          bounds: app.map.map.getBounds(),\n          types: ['art_gallery', 'museum', 'park']\n        };\n\n        // Call the Places API\n        app.map.placesApi.nearbySearch(request, function(results, status) {\n          console.log('Calling Places API');\n          if (status === 'OK') {\n            app.map.setPhotoUrls(results);\n            app.map.storePlaces(results);\n            app.map.createPlaces(results);\n          } else {\n            console.log('We have a places error');\n            var msg = 'Google Places Error: ' + status;\n            app.viewmodel.addError(msg);\n          }\n          ko.applyBindings(app.viewmodel, $('.container')[0]);\n        });\n      }\n    },\n\n    sameBoundsCheck: function() {\n      console.log('sameBoundsCheck'); // REMOVE\n      if (localStorage.bounds) {\n        var oldBounds = JSON.parse(localStorage.bounds);\n        return app.map.map.getBounds().equals(oldBounds);\n      }\n      return false;\n    },\n\n    setPhotoUrls: function(places) {\n      console.log('setPhotoUrls'); // REMOVE\n      places.forEach(function(place) {\n        if (place.photos) {\n          var url = place.photos[0].getUrl({maxWidth: 200,\n                                            maxHeight: 300});\n          place.photos[0].url = url;\n        }\n      });\n    },\n\n    getPlaceDetails: function(place) {\n      console.log('getPlaceDetails'); // REMOVE\n      var request = {\n        placeId: place.data.place_id\n      };\n      // Call the Places API, add details to the place\n      app.map.placesApi.getDetails(request, function(details, status) {\n        if (status === 'OK') {\n          var deets = new app.viewmodel.PlaceDetails(details);\n          place.details(deets);\n        } else {\n          var msg = 'Google Places Error while getting details: ' + status;\n          app.viewmodel.addError(msg);\n        }\n      });\n    },\n\n    createMarker: function(place) {\n      console.log('createMarker'); // REMOVE\n      // Location for the Marker\n      var plcloc = place.data.geometry.location;\n      // Set icon and icon size\n      var image = {\n        url: place.data.icon,\n        scaledSize: new google.maps.Size(50, 50)\n      };\n      // Create the marker\n      var marker = new google.maps.Marker({\n        animation: google.maps.Animation.DROP,\n        attribution: {source: 'mrkjesus2.github.io/Neighborhood-Map'},\n        icon: image,\n        map: app.map.map,\n        place: {\n          location: {lat: plcloc.lat(), lng: plcloc.lng()},\n          placeId: place.data.place_id\n        },\n        title: place.data.name\n      });\n\n      google.maps.event.addListener(marker, 'click', function() {\n        // app.viewmodel.clickHandler(place);\n        app.map.createInfoWindow(place); // test\n      });\n      return marker;\n    }\n  };\n})();\n","/* global app jQuery */\napp.foursquare = app.foursquare || {};\n\n(function() {\n  // TODO: Move this to a config file (keep out of git)\n  var CLIENTID = 'ZBGAM3NOJCK4P345ELK2JIB232FMDENJ05GXYQRSAHOHURJR';\n  var CLIENTSECRET = 'RGEF2DNONIR0AN2GHSIIMGZWLT0IH5JSJCJ5AGFAJ2WZDGLH';\n\n  app.foursquare = {\n    baseUrl: 'https://api.foursquare.com/v2/venus/',\n    version: '20140806',\n\n    findPlace: function(place) {\n      console.log('findPlace'); // REMOVE\n      if (place.frSqrInfo()) {\n        console.log(place.frSqrInfo());\n      } else {\n        console.log('no fourSquare data');\n        var loc = place.data.geometry.location;\n        // Call the foursquare API\n        jQuery.ajax({\n          url: this.baseUrl + 'search',\n          data: {\n            query: place.name(),\n            ll: loc.lat() + ',' + loc.lng(),\n            // Disabled lines due to API requirements\n            client_id: CLIENTID, // eslint-disable-line camelcase\n            client_secret: CLIENTSECRET, // eslint-disable-line camelcase\n            v: this.version,\n            limit: '1'\n          },\n          dataType: 'json'\n\n        }).done(function(data) {\n          // Best matching venue\n          var venue = data.response.venues[0];\n\n          // Call the API again for venue tips\n          app.foursquare.getTips(venue, place);\n        }).fail(function(data) {\n          var msg = 'Foursquare Error: ' + data.statusText;\n          app.viewmodel.addError(msg);\n          console.log(msg);\n        });\n      }\n    },\n\n    getTips: function(venue, place) {\n      console.log('getTips'); // REMOVE\n      jQuery.ajax({\n        url: this.baseUrl + venue.id + '/tips',\n        data: {\n          // Disabled lines due to API requirements\n          client_id: CLIENTID, // eslint-disable-line camelcase\n          client_secret: CLIENTSECRET, // eslint-disable-line camelcase\n          v: this.version\n        },\n        dataType: 'json'\n      }).done(function(data) {\n        var tips = data.response.tips;\n        // Assign details to place\n        app.viewmodel.fourSquare(venue, tips, place);\n        // app.viewmodel.setInfoWindow(place);\n      }).fail(function(data) {\n        var msg = 'Foursquare Tips Error: ' + data.statusText;\n        app.viewmodel.addError(msg);\n      });\n    }\n  };\n})();\n","/* global app jQuery */\napp.wiki = app.wiki || {};\n\n(function() {\n  app.wiki = {\n    getWiki: function(place) {\n      console.log('getWiki'); // REMOVE\n      if (place.wikiInfo()) {\n        console.log(place.wikiInfo());\n      } else {\n        console.log('No wiki info');\n\n        jQuery.ajax({\n          url: 'https://en.wikipedia.org/w/api.php',\n          data: {\n            action: 'query',\n            prop: 'categories|extracts|info',\n            exintro: '',\n            exchars: 1000,\n            inprop: 'url',\n            format: 'json',\n            redirects: '',\n            converttitles: '',\n            titles: place.name()\n          },\n          dataType: 'jsonp',\n          headers: {'Api-User-Agent': 'Mark\\'s Udacity Project'}\n\n        }).done(function(data) {\n          var firstId = Object.keys(data.query.pages)['0'];\n          var page = new app.viewmodel.WikiPage(data.query.pages[firstId]);\n\n          // Check to make sure there is worthwhile content\n          if (page.content() !== undefined &&\n          !app.wiki.ambiguityChk(data, firstId)) {\n            place.wikiInfo(page);\n            // app.viewmodel.setInfoWindow(place);\n          }\n        }).fail(function(data) {\n          var msg = 'Wikipedia Error: ' + data.statusText;\n          app.viewmodel.addError(msg);\n        });\n      }\n    },\n\n    // Check for a disambiguity page(ie. no info - only links)\n    ambiguityChk: function(data, id) {\n      console.log('ambiguityChk'); // REMOVE\n      var categories = data.query.pages[id].categories;\n\n      for (var category in categories) {\n        if (categories[category].title ===\n          'Category:All article disambiguation pages') {\n          return true;\n        }\n        return false;\n      }\n    }\n  };\n})();\n","/* global app ko google document Awesomplete */\n\napp.viewmodel = app.viewmodel || {};\n\napp.viewmodel = {\n  mapError: ko.observable(),\n  places: ko.observableArray(),\n  placeList: [],\n  curMarker: null,\n  curPlace: ko.observable(),\n  inputText: ko.observable(''),\n  frsqr: null,\n  errorMsg: ko.observableArray([]),\n  infoWindow: ko.observable(false),\n  drawerOpen: ko.observable(false),\n  showModal: ko.observable(false),\n\n/* ************* */\n/* Constructors */\n/* ************ */\n  Place: function(place) {\n    console.log('Place constructor'); // REMOVE\n    this.show = ko.observable(true);\n\n    // Info returned from map.getPlaces\n    this.name = ko.observable(place.name);\n    this.rating = ko.observable(place.rating);\n    this.open = ko.observable(\n      place.opening_hours ? 'Open Now' : 'Closed' || 'Hours not available'\n    );\n    if (place.photos) {\n      this.photo = ko.observable({\n        url: ko.observable(place.photos[0].url),\n        height: ko.observable(place.photos[0].height),\n        width: ko.observable(place.photos[0].width),\n        attributions: ko.observable(place.photos[0].html_attributions)\n      } || {});\n    } else {\n      this.photo = ko.observable('none');\n    }\n    this.data = place;\n    this.detailsIcon = ko.observable('fa fa-chevron-circle-up');\n\n    // Info from elsewhere\n    this.details = ko.observable();\n    this.marker = app.map.createMarker(this);\n    this.wikiInfo = ko.observable();\n    this.frSqrInfo = ko.observable();\n  },\n\n  WikiPage: function(page) {\n    console.log('WikiPage Constructor'); // REMOVE\n    this.content = ko.observable(page.extract);\n    this.url = ko.observable(page.fullurl);\n  },\n\n  fourSquare: function(info, tips, place) {\n    console.log('fourSquare constructor'); // REMOVE\n    // Map FourSquare responses to observables\n    var frSqrInfo = ko.mapping.fromJS(info, {});\n    var frSqrTips = ko.mapping.fromJS(tips, {});\n    // Create a child object for tips response\n    frSqrInfo.tips = frSqrTips;\n    // Assign the info to the place\n    place.frSqrInfo(frSqrInfo);\n  },\n\n  PlaceDetails: function(details) {\n    console.log('PlaceDeatails constructor'); // REMOVE\n    this.show = ko.observable(true);\n    this.address = ko.observable(details.formatted_address);\n    this.phone = ko.observable(details.formatted_phone_number);\n    this.photos = ko.observableArray(details.photos);\n    this.rating = ko.observable(details.rating);\n    this.website = ko.observable(details.website);\n    this.reviews = ko.observableArray(\n      new app.viewmodel.Reviews(details.reviews)\n    );\n  },\n\n  Reviews: function(reviews) {\n    console.log('Reviews constructor'); // REMOVE\n    var arr = [];\n    reviews.forEach(function(review) {\n      arr.push({\n        author: ko.observable(review.author_name),\n        authorUrl: ko.observable(review.author_url),\n        text: ko.observable(review.text),\n        time: ko.observable(review.time)\n      });\n    });\n    return arr;\n  },\n\n/* **************** */\n/* Helper Functions */\n/* **************** */\n  addError: function(msg) {\n    console.log('addError'); // REMOVE\n    this.errorMsg = this.errorMsg || ko.observableArray([]);\n    this.errorMsg.push(msg);\n    setTimeout(function() {\n      app.viewmodel.clearErrors();\n    }, 2000);\n  },\n\n  clearErrors: function() {\n    console.log('clearErrors'); // REMOVE\n    this.errorMsg([]);\n  },\n\n  setCurrentPlace: function(place) {\n    console.log('setCurrentPlace'); // REMOVE\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.toggleBounce();\n    }\n    app.viewmodel.curPlace(place);\n  },\n\n  toggleDetails: function(place) {\n    console.log('toggleDetails'); // REMOVE\n    if (place.details() !== undefined && place.details().show() === true) {\n      place.details().show(false);\n      place.detailsIcon('fa fa-chevron-circle-up');\n    } else {\n      app.map.getPlaceDetails(place);\n      app.viewmodel.setCurrentPlace(place);\n      place.detailsIcon('fa fa-chevron-circle-down');\n    }\n  },\n\n  clickContactInfo: function() {\n    console.log('clickContactInfo'); // REMOVE\n    this.inputText(this.curPlace().name());\n    app.viewmodel.placeFilter();\n    this.toggleDetails(app.viewmodel.curPlace());\n    app.map.infoWindow.close();\n    app.viewmodel.infoWindow(false);\n    this.toggleDrawer();\n  },\n\n  // Called when the marker or list item is clicked\n  clickHandler: function(place) {\n    console.log('clickHandler'); // REMOVE\n    var plc = place || this;\n\n    // Open infoWindow on list click\n    if (app.viewmodel.infoWindow() === false) {\n      app.viewmodel.infoWindow(true);\n      app.map.createInfoWindow(plc);\n    }\n\n    // Call for data\n    app.wiki.getWiki(plc);\n    app.foursquare.findPlace(plc);\n\n    // Handle map actions\n    if (app.viewmodel.drawerOpen()) {\n      app.viewmodel.toggleDrawer();\n    }\n    app.viewmodel.setCurrentPlace(plc);\n    app.viewmodel.toggleBounce();\n  },\n\n  findPlaceByName: function(name) {\n    console.log('findPlaceByName'); // REMOVE\n    var places = app.viewmodel.places();\n    for (var i = places.length - 1; i >= 0; i--) {\n      if (places[i].name() === name) {\n        return places[i];\n      }\n    }\n    return false;\n  },\n\n  placeFilter: function() {\n    console.log('placeFilter'); // REMOVE\n    var self = this;\n\n    if (self.inputText()) {\n      var matches = self.places().filter(function(place) {\n        var name = place.name().toLowerCase();\n        var input = self.inputText().toLowerCase();\n        return name.indexOf(input) >= 0;\n      });\n\n      // Set markers and list items to hidden\n      self.places().forEach(function(place) {\n        place.marker.setMap(null);\n        place.show(false);\n      });\n\n      // Add remaining places to the map and list\n      matches.forEach(function(place) {\n        place.marker.setMap(app.map.map);\n        place.show(true);\n      });\n    } else {\n      // Set all place markers on the map\n      self.places().forEach(function(place) {\n        place.marker.setMap(app.map.map);\n        place.show(true);\n      });\n    }\n\n    return true;\n  },\n\n  resetFilter: function() {\n    console.log('resetFilter'); // REMOVE\n    app.viewmodel.inputText('');\n    app.viewmodel.placeFilter();\n    // Close details which are open\n    var places = this.places();\n    for (var i = places.length - 1; i >= 0; i--) {\n      if (places[i].details() && places[i].details().show()) {\n        places[i].details().show(false);\n        places[i].detailsIcon('fa fa-chevron-circle-up');\n      }\n    }\n  },\n\n  // setInfoWindow: function(place) {\n    // console.log('setInfoWindow'); // REMOVE\n  //   var content = $('#infowindow').html();\n\n  //   app.map.infoWindow.setContent(content);\n  //   app.map.infoWindow.open(app.map.map, place.marker);\n  //   // Hide the drawer button while infowindow is open\n  //   app.viewmodel.infoWindow(true);\n  // },\n\n  toggleBounce: function() {\n    console.log('toggleBounce'); // REMOVE\n    if (app.viewmodel.curPlace().marker.getAnimation()) {\n      app.viewmodel.curPlace().marker.setAnimation(null);\n    } else {\n      var marker = app.viewmodel.curPlace().marker;\n      marker.setAnimation(google.maps.Animation.BOUNCE);\n    }\n  },\n\n  toggleDrawer: function() {\n    console.log('toggleDrawer'); // REMOVE\n    app.viewmodel.drawerOpen(!app.viewmodel.drawerOpen());\n  },\n\n  setModal: function() {\n    console.log('setModal'); // REMOVE\n    app.viewmodel.showModal(!app.viewmodel.showModal());\n  },\n\n  autocomplete: function() {\n    console.log('autocomplete'); // REMOVE\n    var input = document.getElementById('place-input');\n    var awesomplete = new Awesomplete(input);\n    awesomplete.list = app.viewmodel.placeList;\n\n    input.addEventListener('awesomplete-selectcomplete', function() {\n      var place = app.viewmodel.findPlaceByName(this.value);\n      console.log(place);\n      app.viewmodel.setCurrentPlace(place);\n      app.viewmodel.toggleDetails(place);\n      app.viewmodel.inputText(this.value);\n      app.viewmodel.placeFilter();\n    });\n  }\n};\n\n"],"sourceRoot":"/source/"}