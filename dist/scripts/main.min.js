app.map=app.map||{},function(){app.map={init:function(){console.log("map.init");var e={lat:39.927677,lng:-75.171909},o=document.getElementById("map-container");this.map=new google.maps.Map(o,{center:e,zoom:14,minZoom:12,maxZoom:18,mapTypeControl:!1}),this.placesApi=new google.maps.places.PlacesService(app.map.map),setTimeout(function(){app.viewmodel.mapError("There appears to be a problem with Google Maps, please try refreshing the page")},5e3),google.maps.event.addListenerOnce(this.map,"bounds_changed",this.getPlaces)},createInfoWindow:function(e){console.log("createInfoWindow");var o='<div id="test"          data-bind="template: {name: \'infowindow\', data: curPlace}">        </div>';if(!this.infoWindow){console.log("Initializing infoWindow");var a=!1;this.infoWindow=new google.maps.InfoWindow({maxWidth:.7*$(window).width(),content:o}),google.maps.event.addListener(this.infoWindow,"domready",function(){a||(ko.applyBindings(app.viewmodel,$("#test")[0]),a=!0)})}this.infoWindow.open(app.map.map,e.marker),app.viewmodel.clickHandler(e),app.viewmodel.infoWindow(!0),google.maps.event.addListener(this.infoWindow,"closeclick",function(){app.viewmodel.infoWindow(!1)})},createPlaces:function(e){console.log("createPlaces"),e.forEach(function(e,o){var a=new app.viewmodel.Place(e);app.viewmodel.places.push(a),app.viewmodel.placeList.push(a.name()),1===o&&app.viewmodel.curPlace(a)}),app.viewmodel.autocomplete()},storePlaces:function(e){console.log("storePlaces"),localStorage.setItem("places",JSON.stringify(e))},retrievePlaces:function(){console.log("retrievePlaces");var e=JSON.parse(localStorage.places);return e.forEach(function(e){var o=e.geometry.location.lat,a=e.geometry.location.lng;e.geometry.location.lat=function(){return o},e.geometry.location.lng=function(){return a}}),e},getPlaces:function(){if(console.log("getPlaces"),localStorage.places&&app.map.sameBoundsCheck())console.log("Creating places from storage"),app.map.createPlaces(app.map.retrievePlaces()),ko.applyBindings(app.viewmodel,$(".container")[0]);else{localStorage.setItem("bounds",JSON.stringify(app.map.map.getBounds()));var e={bounds:app.map.map.getBounds(),types:["art_gallery","museum","park"]};app.map.placesApi.nearbySearch(e,function(e,o){if(console.log("Calling Places API"),"OK"===o)app.map.setPhotoUrls(e),app.map.storePlaces(e),app.map.createPlaces(e);else{console.log("We have a places error");var a="Google Places Error: "+o;app.viewmodel.addError(a)}ko.applyBindings(app.viewmodel,$(".container")[0])})}},sameBoundsCheck:function(){if(console.log("sameBoundsCheck"),localStorage.bounds){var e=JSON.parse(localStorage.bounds);return app.map.map.getBounds().equals(e)}return!1},setPhotoUrls:function(e){console.log("setPhotoUrls"),e.forEach(function(e){if(e.photos){var o=e.photos[0].getUrl({maxWidth:200,maxHeight:300});e.photos[0].url=o}})},getPlaceDetails:function(e){console.log("getPlaceDetails");var o={placeId:e.data.place_id};app.map.placesApi.getDetails(o,function(o,a){if("OK"===a){var t=new app.viewmodel.PlaceDetails(o);e.details(t)}else{var i="Google Places Error while getting details: "+a;app.viewmodel.addError(i)}})},createMarker:function(e){console.log("createMarker");var o=e.data.geometry.location,a={url:e.data.icon,scaledSize:new google.maps.Size(50,50)},t=new google.maps.Marker({animation:google.maps.Animation.DROP,attribution:{source:"mrkjesus2.github.io/Neighborhood-Map"},icon:a,map:app.map.map,place:{location:{lat:o.lat(),lng:o.lng()},placeId:e.data.place_id},title:e.data.name});return google.maps.event.addListener(t,"click",function(){app.map.createInfoWindow(e)}),t}}}(),app.foursquare=app.foursquare||{},function(){var e="ZBGAM3NOJCK4P345ELK2JIB232FMDENJ05GXYQRSAHOHURJR",o="RGEF2DNONIR0AN2GHSIIMGZWLT0IH5JSJCJ5AGFAJ2WZDGLH";app.foursquare={baseUrl:"https://api.foursquare.com/v2/venus/",version:"20140806",findPlace:function(a){if(console.log("findPlace"),a.frSqrInfo())console.log(a.frSqrInfo());else{console.log("no fourSquare data");var t=a.data.geometry.location;jQuery.ajax({url:this.baseUrl+"search",data:{query:a.name(),ll:t.lat()+","+t.lng(),client_id:e,client_secret:o,v:this.version,limit:"1"},dataType:"json"}).done(function(e){var o=e.response.venues[0];app.foursquare.getTips(o,a)}).fail(function(e){var o="Foursquare Error: "+e.statusText;app.viewmodel.addError(o),console.log(o)})}},getTips:function(a,t){console.log("getTips"),jQuery.ajax({url:this.baseUrl+a.id+"/tips",data:{client_id:e,client_secret:o,v:this.version},dataType:"json"}).done(function(e){var o=e.response.tips;app.viewmodel.fourSquare(a,o,t)}).fail(function(e){var o="Foursquare Tips Error: "+e.statusText;app.viewmodel.addError(o)})}}}(),app.wiki=app.wiki||{},function(){app.wiki={getWiki:function(e){console.log("getWiki"),e.wikiInfo()?console.log(e.wikiInfo()):(console.log("No wiki info"),jQuery.ajax({url:"https://en.wikipedia.org/w/api.php",data:{action:"query",prop:"categories|extracts|info",exintro:"",exchars:1e3,inprop:"url",format:"json",redirects:"",converttitles:"",titles:e.name()},dataType:"jsonp",headers:{"Api-User-Agent":"Mark's Udacity Project"}}).done(function(o){var a=Object.keys(o.query.pages)[0],t=new app.viewmodel.WikiPage(o.query.pages[a]);void 0===t.content()||app.wiki.ambiguityChk(o,a)||e.wikiInfo(t)}).fail(function(e){var o="Wikipedia Error: "+e.statusText;app.viewmodel.addError(o)}))},ambiguityChk:function(e,o){console.log("ambiguityChk");var a=e.query.pages[o].categories;for(var t in a)return"Category:All article disambiguation pages"===a[t].title?!0:!1}}}(),app.viewmodel=app.viewmodel||{},app.viewmodel={mapError:ko.observable(),places:ko.observableArray(),placeList:[],curMarker:null,curPlace:ko.observable(),inputText:ko.observable(""),frsqr:null,errorMsg:ko.observableArray([]),infoWindow:ko.observable(!1),drawerOpen:ko.observable(!1),showModal:ko.observable(!1),Place:function(e){console.log("Place constructor"),this.show=ko.observable(!0),this.name=ko.observable(e.name),this.rating=ko.observable(e.rating),this.open=ko.observable(e.opening_hours?"Open Now":"Closed"),e.photos?this.photo=ko.observable({url:ko.observable(e.photos[0].url),height:ko.observable(e.photos[0].height),width:ko.observable(e.photos[0].width),attributions:ko.observable(e.photos[0].html_attributions)}||{}):this.photo=ko.observable("none"),this.data=e,this.detailsIcon=ko.observable("fa fa-chevron-circle-up"),this.details=ko.observable(),this.marker=app.map.createMarker(this),this.wikiInfo=ko.observable(),this.frSqrInfo=ko.observable()},WikiPage:function(e){console.log("WikiPage Constructor"),this.content=ko.observable(e.extract),this.url=ko.observable(e.fullurl)},fourSquare:function(e,o,a){console.log("fourSquare constructor");var t=ko.mapping.fromJS(e,{}),i=ko.mapping.fromJS(o,{});t.tips=i,a.frSqrInfo(t)},PlaceDetails:function(e){console.log("PlaceDeatails constructor"),this.show=ko.observable(!0),this.address=ko.observable(e.formatted_address),this.phone=ko.observable(e.formatted_phone_number),this.photos=ko.observableArray(e.photos),this.rating=ko.observable(e.rating),this.website=ko.observable(e.website),this.reviews=ko.observableArray(new app.viewmodel.Reviews(e.reviews))},Reviews:function(e){console.log("Reviews constructor");var o=[];return e.forEach(function(e){o.push({author:ko.observable(e.author_name),authorUrl:ko.observable(e.author_url),text:ko.observable(e.text),time:ko.observable(e.time)})}),o},addError:function(e){console.log("addError"),this.errorMsg=this.errorMsg||ko.observableArray([]),this.errorMsg.push(e),setTimeout(function(){app.viewmodel.clearErrors()},2e3)},clearErrors:function(){console.log("clearErrors"),this.errorMsg([])},setCurrentPlace:function(e){console.log("setCurrentPlace"),app.viewmodel.curPlace().marker.getAnimation()&&app.viewmodel.toggleBounce(),app.viewmodel.curPlace(e)},toggleDetails:function(e){console.log("toggleDetails"),void 0!==e.details()&&e.details().show()===!0?(e.details().show(!1),e.detailsIcon("fa fa-chevron-circle-up")):(app.map.getPlaceDetails(e),app.viewmodel.setCurrentPlace(e),e.detailsIcon("fa fa-chevron-circle-down"))},clickContactInfo:function(){console.log("clickContactInfo"),this.inputText(this.curPlace().name()),app.viewmodel.placeFilter(),this.toggleDetails(app.viewmodel.curPlace()),app.map.infoWindow.close(),app.viewmodel.infoWindow(!1),this.toggleDrawer()},clickHandler:function(e){console.log("clickHandler");var o=e||this;app.viewmodel.infoWindow()===!1&&(app.viewmodel.infoWindow(!0),app.map.createInfoWindow(o)),app.wiki.getWiki(o),app.foursquare.findPlace(o),app.viewmodel.drawerOpen()&&app.viewmodel.toggleDrawer(),app.viewmodel.setCurrentPlace(o),app.viewmodel.toggleBounce()},findPlaceByName:function(e){console.log("findPlaceByName");for(var o=app.viewmodel.places(),a=o.length-1;a>=0;a--)if(o[a].name()===e)return o[a];return!1},placeFilter:function(){console.log("placeFilter");var e=this;if(e.inputText()){var o=e.places().filter(function(o){var a=o.name().toLowerCase(),t=e.inputText().toLowerCase();return a.indexOf(t)>=0});e.places().forEach(function(e){e.marker.setMap(null),e.show(!1)}),o.forEach(function(e){e.marker.setMap(app.map.map),e.show(!0)})}else e.places().forEach(function(e){e.marker.setMap(app.map.map),e.show(!0)});return!0},resetFilter:function(){console.log("resetFilter"),app.viewmodel.inputText(""),app.viewmodel.placeFilter();for(var e=this.places(),o=e.length-1;o>=0;o--)e[o].details()&&e[o].details().show()&&(e[o].details().show(!1),e[o].detailsIcon("fa fa-chevron-circle-up"))},toggleBounce:function(){if(console.log("toggleBounce"),app.viewmodel.curPlace().marker.getAnimation())app.viewmodel.curPlace().marker.setAnimation(null);else{var e=app.viewmodel.curPlace().marker;e.setAnimation(google.maps.Animation.BOUNCE)}},toggleDrawer:function(){console.log("toggleDrawer"),app.viewmodel.drawerOpen(!app.viewmodel.drawerOpen())},setModal:function(){console.log("setModal"),app.viewmodel.showModal(!app.viewmodel.showModal())},autocomplete:function(){console.log("autocomplete");var e=document.getElementById("place-input"),o=new Awesomplete(e);o.list=app.viewmodel.placeList,e.addEventListener("awesomplete-selectcomplete",function(){var e=app.viewmodel.findPlaceByName(this.value);console.log(e),app.viewmodel.setCurrentPlace(e),app.viewmodel.toggleDetails(e),app.viewmodel.inputText(this.value),app.viewmodel.placeFilter()})}};
//# sourceMappingURL=main.min.js.map
